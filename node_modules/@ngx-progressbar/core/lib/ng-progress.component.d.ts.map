{"version":3,"file":"ng-progress.component.d.ts","sources":["ng-progress.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnChanges, OnDestroy, OnInit, EventEmitter } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { NgProgress } from './ng-progress.service';\r\nimport { NgProgressRef } from './ng-progress-ref';\r\nexport declare class NgProgressComponent implements OnInit, OnChanges, OnDestroy {\r\n    private _ngProgress;\r\n    private _started;\r\n    private _completed;\r\n    /** Progress bar worker */\r\n    progressRef: NgProgressRef;\r\n    /** Stream that emits progress state */\r\n    state$: Observable<{\r\n        active: boolean;\r\n        transform: string;\r\n    }>;\r\n    /** Creates a new instance if id is not already exists */\r\n    id: string;\r\n    /** Initializes inputs from the global config */\r\n    min: number;\r\n    max: number;\r\n    ease: string;\r\n    color: string;\r\n    speed: number;\r\n    thick: boolean;\r\n    fixed: boolean;\r\n    meteor: boolean;\r\n    spinner: boolean;\r\n    trickleSpeed: number;\r\n    debounceTime: number;\r\n    trickleFunc: (n: number) => number;\r\n    spinnerPosition: 'left' | 'right';\r\n    direction: 'ltr+' | 'ltr-' | 'rtl+' | 'rtl-';\r\n    started: EventEmitter<{}>;\r\n    completed: EventEmitter<{}>;\r\n    readonly isStarted: boolean;\r\n    constructor(_ngProgress: NgProgress);\r\n    ngOnChanges(): void;\r\n    ngOnInit(): void;\r\n    ngOnDestroy(): void;\r\n    start(): void;\r\n    complete(): void;\r\n    inc(n?: number): void;\r\n    set(n: number): void;\r\n}\r\n"]}