{"version":3,"file":"ngx-dropzone-wrapper.es5.js","sources":["../src/lib/dropzone.interfaces.ts","../src/lib/dropzone.directive.ts","../src/lib/dropzone.component.ts","../src/lib/dropzone.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { InjectionToken } from '@angular/core';\n\nexport const DROPZONE_CONFIG = new InjectionToken('DROPZONE_CONFIG');\n\nexport type DropzoneEvent = 'error' | 'success' | 'sending' | 'canceled' | 'complete' |\n  'processing' | 'drop' | 'dragStart' | 'dragEnd' | 'dragEnter' | 'dragOver' | 'dragLeave' |\n  'thumbnail' | 'addedFile' | 'removedFile' | 'uploadProgress' | 'maxFilesReached' |\n  'maxFilesExceeded' | 'successMultiple' | 'sendingMultiple' | 'canceledMultiple' |\n  'completeMultiple' | 'processingMultiple' | 'reset' | 'queueComplete' | 'totalUploadProgress';\n\nexport const DropzoneEvents: DropzoneEvent[] = [\n  'error',\n  'success',\n  'sending',\n  'canceled',\n  'complete',\n  'processing',\n\n  'drop',\n  'dragStart',\n  'dragEnd',\n  'dragEnter',\n  'dragOver',\n  'dragLeave',\n\n  'thumbnail',\n  'addedFile',\n  'removedFile',\n  'uploadProgress',\n  'maxFilesReached',\n  'maxFilesExceeded',\n\n  'successMultiple',\n  'sendingMultiple',\n  'canceledMultiple',\n  'completeMultiple',\n  'processingMultiple',\n\n  'reset',\n  'queueComplete',\n  'totalUploadProgress'\n];\n\nexport interface DropzoneConfigInterface {\n  timeout?: number,\n\n  autoReset?: number | null,\n  errorReset?: number | null,\n  cancelReset?: number | null,\n\n  url?: string | DropzoneUrlFunction,\n  method?: string | DropzoneMethodFunction,\n\n  params?: any | DropzoneParamsFunction,\n  headers?: any | DropzoneHeadersFunction,\n\n  init?: DropzoneInitFunction,\n  accept?: DropzoneAcceptFunction,\n  resize?: DropzoneResizeFunction,\n  fallback?: DropzoneFallbackFunction,\n  renameFile?: DropzoneRenameFileFunction,\n  transformFile?: DropzoneTransformFileFunction,\n  chunksUploaded?: DropzoneChunksUploadedFunction,\n\n  withCredentials?: boolean,\n\n  previewsContainer?: any,\n  hiddenInputContainer?: any,\n\n  clickable?: string | string[] | boolean,\n  paramName?: any,\n  capture?: string,\n  maxFiles?: number,\n  maxFilesize?: number,\n  filesizeBase?: number,\n  acceptedFiles?: string,\n  forceFallback?: boolean,\n  addRemoveLinks?: boolean,\n  uploadMultiple?: boolean,\n  parallelUploads?: number,\n  resizeWidth?: number,\n  resizeHeight?: number,\n  resizeMethod?: string,\n  resizeQuality?: number,\n  resizeMimeType?: string,\n  thumbnailWidth?: number,\n  thumbnailHeight?: number,\n  thumbnailMethod?: string,\n  previewTemplate?: string,\n  autoQueue?: boolean,\n  autoProcessQueue?: boolean,\n  ignoreHiddenFiles?: boolean,\n  maxThumbnailFilesize?: number,\n  createImageThumbnails?: boolean,\n\n  chunking?: boolean,\n  chunkSize?: number,\n  retryChunks?: boolean,\n  forceChunking?: boolean,\n  retryChunksLimit?: number,\n  parallelChunkUploads?: boolean,\n\n  dictFileSizeUnits?: any,\n\n  dictDefaultMessage?: string,\n  dictFallbackMessage?: string,\n\n  dictFileTooBig?: string,\n  dictResponseError?: string,\n  dictInvalidFileType?: string,\n\n  dictRemoveFile?: string,\n  dictCancelUpload?: string,\n  dictUploadCanceled?: string,\n  dictFallbackText?: string,\n  dictMaxFilesExceeded?: string,\n  dictRemoveFileConfirmation?: string,\n  dictCancelUploadConfirmation?: string\n}\n\nexport class DropzoneConfig implements DropzoneConfigInterface {\n  timeout?: number;\n\n  autoReset?: number;\n  errorReset?: number;\n  cancelReset?: number;\n\n  url?: string | DropzoneUrlFunction;\n  method?: string | DropzoneMethodFunction;\n\n  params?: any | DropzoneParamsFunction;\n  headers?: any | DropzoneHeadersFunction;\n\n  init?: DropzoneInitFunction;\n  accept?: DropzoneAcceptFunction;\n  resize?: DropzoneResizeFunction;\n  fallback?: DropzoneFallbackFunction;\n  renameFile?: DropzoneRenameFileFunction;\n  transformFile?: DropzoneTransformFileFunction;\n  chunksUploaded?: DropzoneChunksUploadedFunction;\n\n  withCredentials?: boolean;\n\n  previewsContainer?: any;\n  hiddenInputContainer?: any;\n\n  clickable?: string | string[] | boolean;\n  paramName?: any;\n  capture?: string;\n  maxFiles?: number;\n  maxFilesize?: number;\n  filesizeBase?: number;\n  acceptedFiles?: string;\n  forceFallback?: boolean;\n  addRemoveLinks?: boolean;\n  uploadMultiple?: boolean;\n  parallelUploads?: number;\n  resizeWidth?: number;\n  resizeHeight?: number;\n  resizeMethod?: string;\n  resizeQuality?: number;\n  resizeMimeType?: string;\n  thumbnailWidth?: number;\n  thumbnailHeight?: number;\n  thumbnailMethod?: string;\n  previewTemplate?: string;\n  autoQueue?: boolean;\n  autoProcessQueue?: boolean;\n  ignoreHiddenFiles?: boolean;\n  maxThumbnailFilesize?: number;\n  createImageThumbnails?: boolean;\n\n  chunking?: boolean;\n  chunkSize?: number;\n  retryChunks?: boolean;\n  forceChunking?: boolean;\n  retryChunksLimit?: number;\n  parallelChunkUploads?: boolean;\n\n  dictFileSizeUnits?: any;\n\n  dictDefaultMessage?: string;\n  dictFallbackMessage?: string;\n\n  dictFileTooBig?: string;\n  dictResponseError?: string;\n  dictInvalidFileType?: string;\n\n  dictRemoveFile?: string;\n  dictCancelUpload?: string;\n  dictUploadCanceled?: string;\n  dictFallbackText?: string;\n  dictMaxFilesExceeded?: string;\n  dictRemoveFileConfirmation?: string;\n  dictCancelUploadConfirmation?: string;\n\n  constructor(config: DropzoneConfigInterface = {}) {\n    this.assign(config);\n  }\n\n  assign(config: DropzoneConfigInterface | any = {}, target?: any) {\n    target = target || this;\n\n    for (const key in config) {\n      if (config[key] != null && !(Array.isArray(config[key])) &&\n        typeof config[key] === 'object' && !(config[key] instanceof HTMLElement))\n      {\n        target[key] = {};\n\n        this.assign(config[key], target[key]);\n      } else {\n        target[key] = config[key];\n      }\n    }\n  }\n}\n\nexport type DropzoneUrlFunction = (files: any) => string;\nexport type DropzoneMethodFunction = (files: any) => string;\n\nexport type DropzoneParamsFunction = (files: any, xhr: any, chunk?: any) => any;\nexport type DropzoneHeadersFunction = () => any;\n\nexport type DropzoneInitFunction = () => any;\nexport type DropzoneFallbackFunction = () => HTMLElement;\n\nexport type DropzoneAcceptFunction = (file: File, done: Function) => any;\nexport type DropzoneResizeFunction = (file: File, width: number, height: number, resizeMethod: string) => any;\n\nexport type DropzoneRenameFileFunction = (file: File) => string;\nexport type DropzoneTransformFileFunction = (file: File, done: Function) => any;\nexport type DropzoneChunksUploadedFunction = (file: File, done: Function) => any;\n","import * as Dropzone from 'dropzone';\n\nimport { PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { NgZone, Inject, Optional, ElementRef, Renderer2, Directive,\n  OnInit, OnDestroy, DoCheck, OnChanges, Input, Output, EventEmitter,\n  SimpleChanges, KeyValueDiffer, KeyValueDiffers } from '@angular/core';\n\nimport { DROPZONE_CONFIG, DropzoneConfig, DropzoneConfigInterface,\n  DropzoneEvent, DropzoneEvents } from './dropzone.interfaces';\n\n@Directive({\n  selector: '[dropzone]',\n  exportAs: 'ngxDropzone'\n})\nexport class DropzoneDirective implements OnInit, OnDestroy, DoCheck, OnChanges {\n  private instance: any;\n\n  private configDiff: KeyValueDiffer<string, any> | null = null;\n\n  @Input() disabled: boolean = false;\n\n  @Input('dropzone') config?: DropzoneConfigInterface;\n\n  @Output('error'                 ) DZ_ERROR                    = new EventEmitter<any>();\n  @Output('success'               ) DZ_SUCCESS                  = new EventEmitter<any>();\n  @Output('sending'               ) DZ_SENDING                  = new EventEmitter<any>();\n  @Output('canceled'              ) DZ_CANCELED                 = new EventEmitter<any>();\n  @Output('complete'              ) DZ_COMPLETE                 = new EventEmitter<any>();\n  @Output('processing'            ) DZ_PROCESSING               = new EventEmitter<any>();\n\n  @Output('drop'                  ) DZ_DROP                     = new EventEmitter<any>();\n  @Output('dragStart'             ) DZ_DRAGSTART                = new EventEmitter<any>();\n  @Output('dragEnd'               ) DZ_DRAGEND                  = new EventEmitter<any>();\n  @Output('dragEnter'             ) DZ_DRAGENTER                = new EventEmitter<any>();\n  @Output('dragOver'              ) DZ_DRAGOVER                 = new EventEmitter<any>();\n  @Output('dragLeave'             ) DZ_DRAGLEAVE                = new EventEmitter<any>();\n\n  @Output('thumbnail'             ) DZ_THUMBNAIL                = new EventEmitter<any>();\n  @Output('addedFile'             ) DZ_ADDEDFILE                = new EventEmitter<any>();\n  @Output('removedFile'           ) DZ_REMOVEDFILE              = new EventEmitter<any>();\n  @Output('uploadProgress'        ) DZ_UPLOADPROGRESS           = new EventEmitter<any>();\n  @Output('maxFilesReached'       ) DZ_MAXFILESREACHED          = new EventEmitter<any>();\n  @Output('maxFilesExceeded'      ) DZ_MAXFILESEXCEEDED         = new EventEmitter<any>();\n\n  @Output('successMultiple'       ) DZ_SUCCESSMULTIPLE          = new EventEmitter<any>();\n  @Output('sendingMultiple'       ) DZ_SENDINGMULTIPLE          = new EventEmitter<any>();\n  @Output('canceledMultiple'      ) DZ_CANCELEDMULTIPLE         = new EventEmitter<any>();\n  @Output('completeMultiple'      ) DZ_COMPLETEMULTIPLE         = new EventEmitter<any>();\n  @Output('processingMultiple'    ) DZ_PROCESSINGMULTIPLE       = new EventEmitter<any>();\n\n  @Output('reset'                 ) DZ_RESET                    = new EventEmitter<any>();\n  @Output('queueComplete'         ) DZ_QUEUECOMPLETE            = new EventEmitter<any>();\n  @Output('totalUploadProgress'   ) DZ_TOTALUPLOADPROGRESS      = new EventEmitter<any>();\n\n  constructor(private zone: NgZone, private renderer: Renderer2, private elementRef: ElementRef,\n    private differs: KeyValueDiffers, @Inject(PLATFORM_ID) private platformId: Object,\n    @Optional() @Inject(DROPZONE_CONFIG) private defaults: DropzoneConfigInterface)\n  {\n    const dz = Dropzone;\n\n    dz.autoDiscover = false;\n  }\n\n  ngOnInit(): void {\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n\n    const params = new DropzoneConfig(this.defaults);\n\n    params.assign(this.config); // Custom configuration\n\n    this.renderer.addClass(this.elementRef.nativeElement,\n      (params.maxFiles === 1) ? 'dz-single' : 'dz-multiple');\n\n    this.renderer.removeClass(this.elementRef.nativeElement,\n      (params.maxFiles === 1) ? 'dz-multiple' : 'dz-single');\n\n    this.zone.runOutsideAngular(() => {\n      this.instance = new Dropzone(this.elementRef.nativeElement, params);\n    });\n\n    if (this.disabled) {\n      this.instance.disable();\n    }\n\n    // Add auto reset handling for events\n    this.instance.on('success', (result: any) => {\n      if (params.autoReset != null) {\n        setTimeout(() => this.reset(), params.autoReset);\n      }\n    });\n\n    this.instance.on('error', (error: any) => {\n      if (params.errorReset != null) {\n        setTimeout(() => this.reset(), params.errorReset);\n      }\n    });\n\n    this.instance.on('canceled', (result: any) => {\n      if (params.cancelReset != null) {\n        setTimeout(() => this.reset(), params.cancelReset);\n      }\n    });\n\n    // Add native Dropzone event handling\n    DropzoneEvents.forEach((eventName: DropzoneEvent) => {\n      this.instance.on(eventName.toLowerCase(), (...args: any[]) => {\n        args = (args.length === 1) ? args[0] : args;\n\n        const output = `DZ_${eventName.toUpperCase()}`;\n\n        const emitter = this[output as keyof DropzoneDirective] as EventEmitter<any>;\n\n        if (emitter.observers.length > 0) {\n          this.zone.run(() => {\n            emitter.emit(args);\n          });\n        }\n      });\n    });\n\n    if (!this.configDiff) {\n      this.configDiff = this.differs.find(this.config || {}).create();\n\n      this.configDiff.diff(this.config || {});\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.instance) {\n      this.zone.runOutsideAngular(() => {\n        this.instance.destroy();\n      });\n\n      this.instance = null;\n    }\n  }\n\n  ngDoCheck(): void {\n    if (!this.disabled && this.configDiff) {\n      const changes = this.configDiff.diff(this.config || {});\n\n      if (changes && this.instance) {\n        this.ngOnDestroy();\n\n        this.ngOnInit();\n      }\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.instance && changes['disabled']) {\n      if (changes['disabled'].currentValue !== changes['disabled'].previousValue) {\n        if (changes['disabled'].currentValue === false) {\n          this.zone.runOutsideAngular(() => {\n            this.instance.enable();\n          });\n        } else if (changes['disabled'].currentValue === true) {\n          this.zone.runOutsideAngular(() => {\n            this.instance.disable();\n          });\n        }\n      }\n    }\n  }\n\n  public dropzone(): any {\n    return this.instance;\n  }\n\n  public reset(cancel?: boolean): void {\n    if (this.instance) {\n      this.zone.runOutsideAngular(() => {\n        this.instance.removeAllFiles(cancel);\n      });\n    }\n  }\n}\n","import { PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { Inject, Component,\n  OnInit, Input, Output, EventEmitter,\n  ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { DropzoneDirective } from './dropzone.directive';\n\nimport { DropzoneEvent, DropzoneEvents, DropzoneConfigInterface } from './dropzone.interfaces';\n\n@Component({\n  selector: 'dropzone',\n  exportAs: 'ngxDropzone',\n  templateUrl: '../../dist/lib/dropzone.component.html',\n  styleUrls: [\n    '../../dist/lib/dropzone.component.css',\n    '../../node_modules/dropzone/dist/min/dropzone.min.css'\n  ],\n  encapsulation: ViewEncapsulation.None\n})\nexport class DropzoneComponent implements OnInit {\n  @Input() disabled: boolean = false;\n\n  @Input() config?: DropzoneConfigInterface;\n\n  @Input() message: string = 'Click or drag files to upload';\n  @Input() placeholder: string = '';\n\n  @Input() useDropzoneClass: boolean = true;\n\n  @ViewChild(DropzoneDirective) directiveRef?: DropzoneDirective;\n\n  @Output('error'                 ) DZ_ERROR                    = new EventEmitter<any>();\n  @Output('success'               ) DZ_SUCCESS                  = new EventEmitter<any>();\n  @Output('sending'               ) DZ_SENDING                  = new EventEmitter<any>();\n  @Output('canceled'              ) DZ_CANCELED                 = new EventEmitter<any>();\n  @Output('complete'              ) DZ_COMPLETE                 = new EventEmitter<any>();\n  @Output('processing'            ) DZ_PROCESSING               = new EventEmitter<any>();\n\n  @Output('drop'                  ) DZ_DROP                     = new EventEmitter<any>();\n  @Output('dragStart'             ) DZ_DRAGSTART                = new EventEmitter<any>();\n  @Output('dragEnd'               ) DZ_DRAGEND                  = new EventEmitter<any>();\n  @Output('dragEnter'             ) DZ_DRAGENTER                = new EventEmitter<any>();\n  @Output('dragOver'              ) DZ_DRAGOVER                 = new EventEmitter<any>();\n  @Output('dragLeave'             ) DZ_DRAGLEAVE                = new EventEmitter<any>();\n\n  @Output('thumbnail'             ) DZ_THUMBNAIL                = new EventEmitter<any>();\n  @Output('addedFile'             ) DZ_ADDEDFILE                = new EventEmitter<any>();\n  @Output('removedFile'           ) DZ_REMOVEDFILE              = new EventEmitter<any>();\n  @Output('uploadProgress'        ) DZ_UPLOADPROGRESS           = new EventEmitter<any>();\n  @Output('maxFilesReached'       ) DZ_MAXFILESREACHED          = new EventEmitter<any>();\n  @Output('maxFilesExceeded'      ) DZ_MAXFILESEXCEEDED         = new EventEmitter<any>();\n\n  @Output('successMultiple'       ) DZ_SUCCESSMULTIPLE          = new EventEmitter<any>();\n  @Output('sendingMultiple'       ) DZ_SENDINGMULTIPLE          = new EventEmitter<any>();\n  @Output('canceledMultiple'      ) DZ_CANCELEDMULTIPLE         = new EventEmitter<any>();\n  @Output('completeMultiple'      ) DZ_COMPLETEMULTIPLE         = new EventEmitter<any>();\n  @Output('processingMultiple'    ) DZ_PROCESSINGMULTIPLE       = new EventEmitter<any>();\n\n  @Output('reset'                 ) DZ_RESET                    = new EventEmitter<any>();\n  @Output('queueComplete'         ) DZ_QUEUECOMPLETE            = new EventEmitter<any>();\n  @Output('totalUploadProgress'   ) DZ_TOTALUPLOADPROGRESS      = new EventEmitter<any>();\n\n  constructor(@Inject(PLATFORM_ID) private platformId: Object) {}\n\n  ngOnInit(): void {\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n\n    window.setTimeout(() => {\n      DropzoneEvents.forEach((eventName: DropzoneEvent) => {\n        if (this.directiveRef) {\n          const output = `DZ_${eventName.toUpperCase()}`;\n\n          const directiveOutput = output as keyof DropzoneDirective;\n          const componentOutput = output as keyof DropzoneComponent;\n\n          this.directiveRef[directiveOutput] = this[componentOutput] as EventEmitter<any>;\n        }\n      });\n    }, 0);\n  }\n\n  public getPlaceholder(): string {\n    return 'url(' + encodeURI(this.placeholder) + ')';\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\n\nimport { DropzoneComponent } from './dropzone.component';\nimport { DropzoneDirective } from './dropzone.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [DropzoneComponent, DropzoneDirective],\n  exports: [CommonModule, DropzoneComponent, DropzoneDirective]\n})\nexport class DropzoneModule {\n}\n"]}