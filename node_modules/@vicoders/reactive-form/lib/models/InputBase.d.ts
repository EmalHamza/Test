import { ValidatorFn, AsyncValidatorFn } from '@angular/forms';
export declare class InputBase<T> {
    label: string;
    key: string;
    value: T;
    classes: string[];
    group: number;
    group_classes: string[];
    validators: ValidatorFn[];
    asyncValidators: AsyncValidatorFn[];
    controlType: string;
    meta: any;
    disabled: boolean;
    step: number;
    miLabel: string;
    unit: string;
    id?: number;
    searchBy?: string;
    onChange?: Function;
    accept?: string;
    allowMaxSize?: number;
    apiUpload?: string;
    uploadPath?: string;
    multiple?: boolean;
    resultKey?: string;
    keyName?: [];
    options?: {
        label: string;
        value: string;
    }[];
    message?: string;
    upload_path?: string;
    acceptedFiles?: string;
    maxFilesize?: number;
    maxFiles?: number;
    showPreview?: boolean;
    url?: string;
    headers?: object;
    paramName?: string;
    resultTransformer?: Function;
    title: string;
    zoom: boolean;
    min?: number;
    max?: number;
    type?: string;
    rows?: number;
    mask?: {}[];
    valueWithCharacter?: boolean;
    guide?: boolean;
    placeholder?: string;
    height?: string;
    plugins?: string;
    showIcon?: Boolean;
    monthNavigator?: Boolean;
    yearNavigator?: Boolean;
    yearRange?: string;
    showTime?: Boolean;
    timeOnly?: Boolean;
    dateFormat?: string;
    minDate?: Date;
    maxDate?: Date;
    tags?: Boolean;
    fieldName?: Function;
    lengthToSearch?: number;
    isSelectAll?: Boolean;
    selectBtnText?: string;
    clearBtnText?: string;
    dropdownParent?: any;
    method?: string;
    numberOfChar?: Number;
    dataFunction?: Function;
    uploadFromDB?: boolean;
    content?: Text;
    width: string;
    maxWidth: string;
    maxHeight: string;
    constructor(options?: {
        label?: string;
        key?: string;
        value?: T;
        classes?: string[];
        group?: number;
        group_classes?: string[];
        validators?: ValidatorFn[];
        asyncValidators?: AsyncValidatorFn[];
        controlType?: string;
        meta?: any;
        disabled?: boolean;
    });
}
