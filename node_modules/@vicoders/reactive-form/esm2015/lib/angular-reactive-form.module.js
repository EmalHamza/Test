/**
 * @fileoverview added by tsickle
 * Generated from: lib/angular-reactive-form.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule, Injector } from '@angular/core';
import { AngularReactiveFormComponent } from './angular-reactive-form.component';
import { CommonModule } from '@angular/common';
import { ReactiveFormsModule } from '@angular/forms';
import { DirectivesModule } from './directives/directives.module';
import { EditorModule } from '@tinymce/tinymce-angular';
import { ReactiveFormComponent } from './components/reactive-form/reactive-form.component';
import { DynamicInputComponent } from './components/dynamic-input/dynamic-input.component';
import { setAppInjector } from './app-injector';
import { NgbModule } from '@ng-bootstrap/ng-bootstrap';
import { PipesModule } from './pipes/pipes.module';
/** @type {?} */
export const UPLOAD_DIRECTIVE_HEADERS = 'UPLOAD_DIRECTIVE_HEADERS';
/** @type {?} */
export const UPLOAD_DIRECTIVE_API_URL = 'UPLOAD_DIRECTIVE_API_URL';
/** @type {?} */
export const TINYMCE_CONFIG = 'TINYMCE_CONFIG';
const ɵ0 = {
    example: 'example'
}, ɵ1 = {
    apiUpload: 'example',
    paramName: 'example',
    resultTransformer: 'example'
};
export class AngularReactiveFormModule {
    /**
     * @param {?} injector
     */
    constructor(injector) {
        setAppInjector(injector);
    }
}
AngularReactiveFormModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule,
                    ReactiveFormsModule,
                    PipesModule,
                    DirectivesModule,
                    EditorModule,
                    NgbModule
                ],
                declarations: [AngularReactiveFormComponent, ReactiveFormComponent, DynamicInputComponent],
                exports: [AngularReactiveFormComponent, ReactiveFormComponent],
                providers: [
                    {
                        provide: UPLOAD_DIRECTIVE_HEADERS,
                        useValue: ɵ0
                    },
                    {
                        provide: UPLOAD_DIRECTIVE_API_URL,
                        useValue: 'example'
                    },
                    {
                        provide: TINYMCE_CONFIG,
                        useValue: ɵ1
                    }
                ]
            },] }
];
/** @nocollapse */
AngularReactiveFormModule.ctorParameters = () => [
    { type: Injector }
];
export { ɵ0, ɵ1 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5ndWxhci1yZWFjdGl2ZS1mb3JtLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B2aWNvZGVycy9yZWFjdGl2ZS1mb3JtLyIsInNvdXJjZXMiOlsibGliL2FuZ3VsYXItcmVhY3RpdmUtZm9ybS5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUF1QixRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDeEUsT0FBTyxFQUFFLDRCQUE0QixFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFDakYsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQ2xFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUN4RCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxvREFBb0QsQ0FBQztBQUMzRixPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxvREFBb0QsQ0FBQztBQUMzRixPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDaEQsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQzs7QUFDbkQsTUFBTSxPQUFPLHdCQUF3QixHQUFHLDBCQUEwQjs7QUFDbEUsTUFBTSxPQUFPLHdCQUF3QixHQUFHLDBCQUEwQjs7QUFDbEUsTUFBTSxPQUFPLGNBQWMsR0FBRyxnQkFBZ0I7V0FnQjlCO0lBQ1IsT0FBTyxFQUFFLFNBQVM7Q0FDbkIsT0FRUztJQUNSLFNBQVMsRUFBRSxTQUFTO0lBQ3BCLFNBQVMsRUFBRSxTQUFTO0lBQ3BCLGlCQUFpQixFQUFFLFNBQVM7Q0FDN0I7QUFJUCxNQUFNLE9BQU8seUJBQXlCOzs7O0lBQ3BDLFlBQVksUUFBa0I7UUFDNUIsY0FBYyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzNCLENBQUM7OztZQW5DRixRQUFRLFNBQUM7Z0JBQ1IsT0FBTyxFQUFFO29CQUNQLFlBQVk7b0JBQ1osbUJBQW1CO29CQUNuQixXQUFXO29CQUNYLGdCQUFnQjtvQkFDaEIsWUFBWTtvQkFDWixTQUFTO2lCQUNWO2dCQUNELFlBQVksRUFBRSxDQUFDLDRCQUE0QixFQUFFLHFCQUFxQixFQUFFLHFCQUFxQixDQUFDO2dCQUMxRixPQUFPLEVBQUUsQ0FBQyw0QkFBNEIsRUFBRSxxQkFBcUIsQ0FBQztnQkFDOUQsU0FBUyxFQUFFO29CQUNUO3dCQUNFLE9BQU8sRUFBRSx3QkFBd0I7d0JBQ2pDLFFBQVEsSUFFUDtxQkFDRjtvQkFDRDt3QkFDRSxPQUFPLEVBQUUsd0JBQXdCO3dCQUNqQyxRQUFRLEVBQUUsU0FBUztxQkFDcEI7b0JBQ0Q7d0JBQ0UsT0FBTyxFQUFFLGNBQWM7d0JBQ3ZCLFFBQVEsSUFJUDtxQkFDRjtpQkFDRjthQUNGOzs7O1lBOUN1QyxRQUFRIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUsIE1vZHVsZVdpdGhQcm92aWRlcnMsIEluamVjdG9yIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBbmd1bGFyUmVhY3RpdmVGb3JtQ29tcG9uZW50IH0gZnJvbSAnLi9hbmd1bGFyLXJlYWN0aXZlLWZvcm0uY29tcG9uZW50JztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBSZWFjdGl2ZUZvcm1zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgRGlyZWN0aXZlc01vZHVsZSB9IGZyb20gJy4vZGlyZWN0aXZlcy9kaXJlY3RpdmVzLm1vZHVsZSc7XG5pbXBvcnQgeyBFZGl0b3JNb2R1bGUgfSBmcm9tICdAdGlueW1jZS90aW55bWNlLWFuZ3VsYXInO1xuaW1wb3J0IHsgUmVhY3RpdmVGb3JtQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL3JlYWN0aXZlLWZvcm0vcmVhY3RpdmUtZm9ybS5jb21wb25lbnQnO1xuaW1wb3J0IHsgRHluYW1pY0lucHV0Q29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL2R5bmFtaWMtaW5wdXQvZHluYW1pYy1pbnB1dC5jb21wb25lbnQnO1xuaW1wb3J0IHsgc2V0QXBwSW5qZWN0b3IgfSBmcm9tICcuL2FwcC1pbmplY3Rvcic7XG5pbXBvcnQgeyBOZ2JNb2R1bGUgfSBmcm9tICdAbmctYm9vdHN0cmFwL25nLWJvb3RzdHJhcCc7XG5pbXBvcnQgeyBQaXBlc01vZHVsZSB9IGZyb20gJy4vcGlwZXMvcGlwZXMubW9kdWxlJztcbmV4cG9ydCBjb25zdCBVUExPQURfRElSRUNUSVZFX0hFQURFUlMgPSAnVVBMT0FEX0RJUkVDVElWRV9IRUFERVJTJztcbmV4cG9ydCBjb25zdCBVUExPQURfRElSRUNUSVZFX0FQSV9VUkwgPSAnVVBMT0FEX0RJUkVDVElWRV9BUElfVVJMJztcbmV4cG9ydCBjb25zdCBUSU5ZTUNFX0NPTkZJRyA9ICdUSU5ZTUNFX0NPTkZJRyc7XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtcbiAgICBDb21tb25Nb2R1bGUsXG4gICAgUmVhY3RpdmVGb3Jtc01vZHVsZSxcbiAgICBQaXBlc01vZHVsZSxcbiAgICBEaXJlY3RpdmVzTW9kdWxlLFxuICAgIEVkaXRvck1vZHVsZSxcbiAgICBOZ2JNb2R1bGVcbiAgXSxcbiAgZGVjbGFyYXRpb25zOiBbQW5ndWxhclJlYWN0aXZlRm9ybUNvbXBvbmVudCwgUmVhY3RpdmVGb3JtQ29tcG9uZW50LCBEeW5hbWljSW5wdXRDb21wb25lbnRdLFxuICBleHBvcnRzOiBbQW5ndWxhclJlYWN0aXZlRm9ybUNvbXBvbmVudCwgUmVhY3RpdmVGb3JtQ29tcG9uZW50XSxcbiAgcHJvdmlkZXJzOiBbXG4gICAge1xuICAgICAgcHJvdmlkZTogVVBMT0FEX0RJUkVDVElWRV9IRUFERVJTLFxuICAgICAgdXNlVmFsdWU6IHtcbiAgICAgICAgZXhhbXBsZTogJ2V4YW1wbGUnXG4gICAgICB9XG4gICAgfSxcbiAgICB7XG4gICAgICBwcm92aWRlOiBVUExPQURfRElSRUNUSVZFX0FQSV9VUkwsXG4gICAgICB1c2VWYWx1ZTogJ2V4YW1wbGUnXG4gICAgfSxcbiAgICB7XG4gICAgICBwcm92aWRlOiBUSU5ZTUNFX0NPTkZJRyxcbiAgICAgIHVzZVZhbHVlOiB7XG4gICAgICAgIGFwaVVwbG9hZDogJ2V4YW1wbGUnLFxuICAgICAgICBwYXJhbU5hbWU6ICdleGFtcGxlJyxcbiAgICAgICAgcmVzdWx0VHJhbnNmb3JtZXI6ICdleGFtcGxlJ1xuICAgICAgfVxuICAgIH1cbiAgXVxufSlcbmV4cG9ydCBjbGFzcyBBbmd1bGFyUmVhY3RpdmVGb3JtTW9kdWxlIHtcbiAgY29uc3RydWN0b3IoaW5qZWN0b3I6IEluamVjdG9yKSB7XG4gICAgc2V0QXBwSW5qZWN0b3IoaW5qZWN0b3IpO1xuICB9XG59XG4iXX0=