/**
 * @fileoverview added by tsickle
 * Generated from: lib/directives/directives.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { RouterModule } from '@angular/router';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { CustomSelectionComponent } from './custom-selection/custom-selection.component';
import { MaskInputComponent } from './mask-input/mask-input.component';
import { MutipleCheckboxComponent } from './mutiple-checkbox/mutiple-checkbox.component';
import { TextMaskModule } from 'angular2-text-mask';
import { CustomDropzoneComponent } from './dropzone/dropzone.component';
import { DropzoneModule } from 'ngx-dropzone-wrapper';
import { DROPZONE_CONFIG } from 'ngx-dropzone-wrapper';
import { CalendarModule } from 'primeng/calendar';
import { CustomDateTimePickerComponent } from './custom-date-time-picker/custom-date-time-picker.component';
import { PhoneInputComponent } from './phone-input/phone-input.component';
import { CustomSelect2Component } from './custom-select2/custom-select2.component';
import { CustomCheckboxComponent } from './custom-checkbox/custom-checkbox.component';
import { UploadImagesComponent } from './upload-images/upload-images.component';
import { ProvinceCityComponent } from './province-city/province-city.component';
import { SelectionByApiComponent } from './selection-by-api/selection-by-api.component';
import { MultiSelectionByApiComponent } from './multi-selection-by-api/multi-selection-by-api.component';
import { CaptchaComponent } from './captcha/captcha.component';
import { SingleSelect2Component } from './single-select2/single-select2.component';
import { CustomSwitchInputComponent } from './custom-switch-input/custom-switch-input.component';
import { NgProgressModule } from '@ngx-progressbar/core';
import { NgProgressHttpModule } from '@ngx-progressbar/http';
import { UploadFilesComponent } from './upload-file/upload-images.component';
import { DraftJsComponent } from './draft-js/draft-js.component';
import { UploadFilesV3Component } from './upload-file-v3/upload-images.component';
import { TypeaheadComponent } from './typeahead/typeahead.component';
import { NgbModule } from '@ng-bootstrap/ng-bootstrap';
import { PipesModule } from '../pipes/pipes.module';
import { TypeaheadWithoutApiComponent } from './typeahead-without-api/typeahead.component';
import { RangerSildersComponent } from './ranger-silders/ranger-silders.component';
import { GutenburgComponent } from './gutenburg/gutenburg.component';
// import { NgGutenbergModule } from '@vicoders/vc-gutenberg';
// import { ImageCropperModule } from 'ngx-image-cropper';
// import { UploadImageWithCropComponent } from './upload-image-with-crop/upload-image-with-crop.component';
/** @type {?} */
const DEFAULT_DROPZONE_CONFIG = {};
const ɵ0 = DEFAULT_DROPZONE_CONFIG;
export class DirectivesModule {
}
DirectivesModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule,
                    FormsModule,
                    ReactiveFormsModule,
                    RouterModule,
                    TextMaskModule,
                    DropzoneModule,
                    CalendarModule,
                    NgProgressModule.withConfig({
                        spinnerPosition: 'right',
                        color: '#f71cff'
                    }),
                    NgProgressHttpModule,
                    NgbModule,
                    PipesModule,
                ],
                exports: [
                    CustomSelectionComponent,
                    MaskInputComponent,
                    MutipleCheckboxComponent,
                    CustomDropzoneComponent,
                    CustomDateTimePickerComponent,
                    PhoneInputComponent,
                    CustomSelect2Component,
                    CustomCheckboxComponent,
                    UploadImagesComponent,
                    ProvinceCityComponent,
                    SelectionByApiComponent,
                    MultiSelectionByApiComponent,
                    CaptchaComponent,
                    SingleSelect2Component,
                    CustomSwitchInputComponent,
                    UploadFilesComponent,
                    DraftJsComponent,
                    UploadFilesV3Component,
                    TypeaheadComponent,
                    TypeaheadWithoutApiComponent,
                    RangerSildersComponent,
                    GutenburgComponent
                    // UploadImageWithCropComponent
                ],
                providers: [
                    {
                        provide: DROPZONE_CONFIG,
                        useValue: ɵ0
                    }
                ],
                declarations: [
                    CustomSelectionComponent,
                    MaskInputComponent,
                    MutipleCheckboxComponent,
                    CustomDropzoneComponent,
                    CustomDateTimePickerComponent,
                    PhoneInputComponent,
                    CustomSelect2Component,
                    CustomCheckboxComponent,
                    UploadImagesComponent,
                    ProvinceCityComponent,
                    SelectionByApiComponent,
                    MultiSelectionByApiComponent,
                    CaptchaComponent,
                    SingleSelect2Component,
                    CustomSwitchInputComponent,
                    UploadFilesComponent,
                    DraftJsComponent,
                    UploadFilesV3Component,
                    TypeaheadComponent,
                    TypeaheadWithoutApiComponent,
                    RangerSildersComponent,
                    GutenburgComponent
                    // UploadImageWithCropComponent
                ]
            },] }
];
export { ɵ0 };
//# sourceMappingURL=data:application/json;base64,