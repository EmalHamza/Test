/**
 * @fileoverview added by tsickle
 * Generated from: lib/directives/selection-by-api/selection-by-api.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { HttpClient } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { catchError, map } from 'rxjs/operators';
export class SelectionService {
    /**
     * @param {?} http
     */
    constructor(http) {
        this.http = http;
        this.url = '/api/admin/users';
    }
    /**
     * @param {?} api
     * @param {?} headers
     * @param {?} method
     * @return {?}
     */
    getAll(api, headers, method) {
        return this.http.request(method, api, { headers: headers }).pipe(map((/**
         * @param {?} response
         * @return {?}
         */
        function (response) {
            return response;
        }), catchError((/**
         * @param {?} error
         * @return {?}
         */
        error => {
            throw error;
        }))));
    }
}
SelectionService.decorators = [
    { type: Injectable }
];
/** @nocollapse */
SelectionService.ctorParameters = () => [
    { type: HttpClient }
];
if (false) {
    /**
     * @type {?}
     * @protected
     */
    SelectionService.prototype.url;
    /** @type {?} */
    SelectionService.prototype.http;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0aW9uLWJ5LWFwaS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B2aWNvZGVycy9yZWFjdGl2ZS1mb3JtLyIsInNvdXJjZXMiOlsibGliL2RpcmVjdGl2ZXMvc2VsZWN0aW9uLWJ5LWFwaS9zZWxlY3Rpb24tYnktYXBpLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ2xELE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLFVBQVUsRUFBTyxHQUFHLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUt0RCxNQUFNLE9BQU8sZ0JBQWdCOzs7O0lBRzNCLFlBQW1CLElBQWdCO1FBQWhCLFNBQUksR0FBSixJQUFJLENBQVk7UUFGekIsUUFBRyxHQUFHLGtCQUFrQixDQUFDO0lBRUcsQ0FBQzs7Ozs7OztJQUV2QyxNQUFNLENBQUMsR0FBRyxFQUFFLE9BQU8sRUFBRSxNQUFNO1FBQ3pCLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxFQUFFLEdBQUcsRUFBRSxFQUFFLE9BQU8sRUFBRSxPQUFPLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FDOUQsR0FBRzs7OztRQUNELFVBQVMsUUFBUTtZQUNmLE9BQU8sUUFBUSxDQUFDO1FBQ2xCLENBQUMsR0FDRCxVQUFVOzs7O1FBQUMsS0FBSyxDQUFDLEVBQUU7WUFDakIsTUFBTSxLQUFLLENBQUM7UUFDZCxDQUFDLEVBQUMsQ0FDSCxDQUNGLENBQUM7SUFDSixDQUFDOzs7WUFqQkYsVUFBVTs7OztZQU5GLFVBQVU7Ozs7Ozs7SUFRakIsK0JBQW1DOztJQUV2QixnQ0FBdUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIdHRwQ2xpZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnO1xuaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgY2F0Y2hFcnJvciwgdGFwLCBtYXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgKiBhcyBfIGZyb20gJ2xvZGFzaCc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBTZWxlY3Rpb25TZXJ2aWNlIHtcbiAgcHJvdGVjdGVkIHVybCA9ICcvYXBpL2FkbWluL3VzZXJzJztcblxuICBjb25zdHJ1Y3RvcihwdWJsaWMgaHR0cDogSHR0cENsaWVudCkge31cblxuICBnZXRBbGwoYXBpLCBoZWFkZXJzLCBtZXRob2QpOiBPYnNlcnZhYmxlPGFueT4ge1xuICAgIHJldHVybiB0aGlzLmh0dHAucmVxdWVzdChtZXRob2QsIGFwaSwgeyBoZWFkZXJzOiBoZWFkZXJzIH0pLnBpcGUoXG4gICAgICBtYXAoXG4gICAgICAgIGZ1bmN0aW9uKHJlc3BvbnNlKSB7XG4gICAgICAgICAgcmV0dXJuIHJlc3BvbnNlO1xuICAgICAgICB9LFxuICAgICAgICBjYXRjaEVycm9yKGVycm9yID0+IHtcbiAgICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgICAgfSlcbiAgICAgIClcbiAgICApO1xuICB9XG59XG4iXX0=