/**
 * @fileoverview added by tsickle
 * Generated from: lib/services/form-control.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { FormControl, FormGroup } from '@angular/forms';
import * as _ from 'lodash';
var FormControlService = /** @class */ (function () {
    function FormControlService() {
    }
    /**
     * @param {?} inputs
     * @return {?}
     */
    FormControlService.prototype.toFormGroup = /**
     * @param {?} inputs
     * @return {?}
     */
    function (inputs) {
        // tslint:disable-next-line:prefer-const
        /** @type {?} */
        var group = {};
        inputs.forEach((/**
         * @param {?} input
         * @return {?}
         */
        function (input) {
            // tslint:disable-next-line:prefer-const
            /** @type {?} */
            var arrayValidator = [];
            _.forEach(input.validators, (/**
             * @param {?} value
             * @return {?}
             */
            function (value) {
                arrayValidator.push(((/** @type {?} */ (value))).validator);
            }));
            group[input.key] = new FormControl(input.value || '', arrayValidator, input.asyncValidators);
        }));
        return new FormGroup(group);
    };
    FormControlService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    FormControlService.ctorParameters = function () { return []; };
    return FormControlService;
}());
export { FormControlService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybS1jb250cm9sLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Admljb2RlcnMvcmVhY3RpdmUtZm9ybS8iLCJzb3VyY2VzIjpbImxpYi9zZXJ2aWNlcy9mb3JtLWNvbnRyb2wuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLFdBQVcsRUFBRSxTQUFTLEVBQWMsTUFBTSxnQkFBZ0IsQ0FBQztBQUVwRSxPQUFPLEtBQUssQ0FBQyxNQUFNLFFBQVEsQ0FBQztBQUU1QjtJQUVFO0lBQWUsQ0FBQzs7Ozs7SUFFaEIsd0NBQVc7Ozs7SUFBWCxVQUFZLE1BQXdCOzs7WUFFOUIsS0FBSyxHQUFRLEVBQUU7UUFDbkIsTUFBTSxDQUFDLE9BQU87Ozs7UUFBQyxVQUFBLEtBQUs7OztnQkFFWixjQUFjLEdBQUcsRUFBRTtZQUN6QixDQUFDLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxVQUFVOzs7O1lBQUUsVUFBUyxLQUFLO2dCQUN4QyxjQUFjLENBQUMsSUFBSSxDQUFDLENBQUMsbUJBQUEsS0FBSyxFQUFPLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQztZQUNoRCxDQUFDLEVBQUMsQ0FBQztZQUNILEtBQUssQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLEdBQUcsSUFBSSxXQUFXLENBQUMsS0FBSyxDQUFDLEtBQUssSUFBSSxFQUFFLEVBQUUsY0FBYyxFQUFFLEtBQUssQ0FBQyxlQUFlLENBQUMsQ0FBQztRQUMvRixDQUFDLEVBQUMsQ0FBQztRQUNILE9BQU8sSUFBSSxTQUFTLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDOUIsQ0FBQzs7Z0JBaEJGLFVBQVU7Ozs7SUFpQlgseUJBQUM7Q0FBQSxBQWpCRCxJQWlCQztTQWhCWSxrQkFBa0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEZvcm1Db250cm9sLCBGb3JtR3JvdXAsIFZhbGlkYXRvcnMgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XHJcbmltcG9ydCB7IElucHV0QmFzZSB9IGZyb20gJy4uL21vZGVscy9JbnB1dEJhc2UnO1xyXG5pbXBvcnQgKiBhcyBfIGZyb20gJ2xvZGFzaCc7XHJcblxyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBGb3JtQ29udHJvbFNlcnZpY2Uge1xyXG4gIGNvbnN0cnVjdG9yKCkge31cclxuXHJcbiAgdG9Gb3JtR3JvdXAoaW5wdXRzOiBJbnB1dEJhc2U8YW55PltdKSB7XHJcbiAgICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6cHJlZmVyLWNvbnN0XHJcbiAgICBsZXQgZ3JvdXA6IGFueSA9IHt9O1xyXG4gICAgaW5wdXRzLmZvckVhY2goaW5wdXQgPT4ge1xyXG4gICAgICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6cHJlZmVyLWNvbnN0XHJcbiAgICAgIGNvbnN0IGFycmF5VmFsaWRhdG9yID0gW107XHJcbiAgICAgIF8uZm9yRWFjaChpbnB1dC52YWxpZGF0b3JzLCBmdW5jdGlvbih2YWx1ZSkge1xyXG4gICAgICAgIGFycmF5VmFsaWRhdG9yLnB1c2goKHZhbHVlIGFzIGFueSkudmFsaWRhdG9yKTtcclxuICAgICAgfSk7XHJcbiAgICAgIGdyb3VwW2lucHV0LmtleV0gPSBuZXcgRm9ybUNvbnRyb2woaW5wdXQudmFsdWUgfHwgJycsIGFycmF5VmFsaWRhdG9yLCBpbnB1dC5hc3luY1ZhbGlkYXRvcnMpO1xyXG4gICAgfSk7XHJcbiAgICByZXR1cm4gbmV3IEZvcm1Hcm91cChncm91cCk7XHJcbiAgfVxyXG59XHJcbiJdfQ==