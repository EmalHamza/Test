/**
 * @fileoverview added by tsickle
 * Generated from: lib/models/DropZone.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { InputBase } from './InputBase';
var DropZone = /** @class */ (function (_super) {
    tslib_1.__extends(DropZone, _super);
    function DropZone(options) {
        if (options === void 0) { options = {}; }
        var _this = _super.call(this, options) || this;
        _this.controlType = 'dropzone';
        _this.message = options['message'] || '';
        _this.upload_path = options['upload_path'] || '';
        _this.acceptedFiles = options['acceptedFiles'] || '*';
        _this.maxFilesize = options['maxFilesize'] || 50;
        _this.maxFiles = options['maxFiles'] || 0;
        _this.showPreview = options['showPreview'] || false;
        _this.url = options['url'] || '';
        _this.headers = options['headers'] || null;
        _this.paramName = options['paramName'] || 'file';
        _this.resultTransformer = options['resultTransformer'];
        return _this;
    }
    return DropZone;
}(InputBase));
export { DropZone };
if (false) {
    /** @type {?} */
    DropZone.prototype.controlType;
    /** @type {?} */
    DropZone.prototype.message;
    /** @type {?} */
    DropZone.prototype.upload_path;
    /** @type {?} */
    DropZone.prototype.acceptedFiles;
    /** @type {?} */
    DropZone.prototype.maxFilesize;
    /** @type {?} */
    DropZone.prototype.maxFiles;
    /** @type {?} */
    DropZone.prototype.showPreview;
    /** @type {?} */
    DropZone.prototype.url;
    /** @type {?} */
    DropZone.prototype.headers;
    /** @type {?} */
    DropZone.prototype.paramName;
    /** @type {?} */
    DropZone.prototype.resultTransformer;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRHJvcFpvbmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Admljb2RlcnMvcmVhY3RpdmUtZm9ybS8iLCJzb3VyY2VzIjpbImxpYi9tb2RlbHMvRHJvcFpvbmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUV4QztJQUE4QixvQ0FBaUI7SUFhN0Msa0JBQVksT0FBZ0I7UUFBaEIsd0JBQUEsRUFBQSxZQUFnQjtRQUE1QixZQUNFLGtCQUFNLE9BQU8sQ0FBQyxTQVdmO1FBeEJELGlCQUFXLEdBQUcsVUFBVSxDQUFDO1FBY3ZCLEtBQUksQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDLFNBQVMsQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUN4QyxLQUFJLENBQUMsV0FBVyxHQUFHLE9BQU8sQ0FBQyxhQUFhLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDaEQsS0FBSSxDQUFDLGFBQWEsR0FBRyxPQUFPLENBQUMsZUFBZSxDQUFDLElBQUksR0FBRyxDQUFDO1FBQ3JELEtBQUksQ0FBQyxXQUFXLEdBQUcsT0FBTyxDQUFDLGFBQWEsQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUNoRCxLQUFJLENBQUMsUUFBUSxHQUFHLE9BQU8sQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDekMsS0FBSSxDQUFDLFdBQVcsR0FBRyxPQUFPLENBQUMsYUFBYSxDQUFDLElBQUksS0FBSyxDQUFDO1FBQ25ELEtBQUksQ0FBQyxHQUFHLEdBQUcsT0FBTyxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUNoQyxLQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQyxTQUFTLENBQUMsSUFBSSxJQUFJLENBQUM7UUFDMUMsS0FBSSxDQUFDLFNBQVMsR0FBRyxPQUFPLENBQUMsV0FBVyxDQUFDLElBQUksTUFBTSxDQUFDO1FBQ2hELEtBQUksQ0FBQyxpQkFBaUIsR0FBRyxPQUFPLENBQUMsbUJBQW1CLENBQUMsQ0FBQzs7SUFDeEQsQ0FBQztJQUNILGVBQUM7QUFBRCxDQUFDLEFBMUJELENBQThCLFNBQVMsR0EwQnRDOzs7O0lBekJDLCtCQUF5Qjs7SUFDekIsMkJBQWdCOztJQUNoQiwrQkFBb0I7O0lBQ3BCLGlDQUFzQjs7SUFDdEIsK0JBQW9COztJQUNwQiw0QkFBaUI7O0lBQ2pCLCtCQUFxQjs7SUFDckIsdUJBQVk7O0lBQ1osMkJBQWdCOztJQUNoQiw2QkFBa0I7O0lBQ2xCLHFDQUE0QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElucHV0QmFzZSB9IGZyb20gJy4vSW5wdXRCYXNlJztcblxuZXhwb3J0IGNsYXNzIERyb3Bab25lIGV4dGVuZHMgSW5wdXRCYXNlPHN0cmluZz4ge1xuICBjb250cm9sVHlwZSA9ICdkcm9wem9uZSc7XG4gIG1lc3NhZ2U6IHN0cmluZztcbiAgdXBsb2FkX3BhdGg6IHN0cmluZztcbiAgYWNjZXB0ZWRGaWxlczogc3RyaW5nO1xuICBtYXhGaWxlc2l6ZTogbnVtYmVyO1xuICBtYXhGaWxlczogbnVtYmVyO1xuICBzaG93UHJldmlldzogYm9vbGVhbjtcbiAgdXJsOiBzdHJpbmc7XG4gIGhlYWRlcnM6IG9iamVjdDtcbiAgcGFyYW1OYW1lOiBzdHJpbmc7XG4gIHJlc3VsdFRyYW5zZm9ybWVyOiBGdW5jdGlvbjtcblxuICBjb25zdHJ1Y3RvcihvcHRpb25zOiB7fSA9IHt9KSB7XG4gICAgc3VwZXIob3B0aW9ucyk7XG4gICAgdGhpcy5tZXNzYWdlID0gb3B0aW9uc1snbWVzc2FnZSddIHx8ICcnO1xuICAgIHRoaXMudXBsb2FkX3BhdGggPSBvcHRpb25zWyd1cGxvYWRfcGF0aCddIHx8ICcnO1xuICAgIHRoaXMuYWNjZXB0ZWRGaWxlcyA9IG9wdGlvbnNbJ2FjY2VwdGVkRmlsZXMnXSB8fCAnKic7XG4gICAgdGhpcy5tYXhGaWxlc2l6ZSA9IG9wdGlvbnNbJ21heEZpbGVzaXplJ10gfHwgNTA7XG4gICAgdGhpcy5tYXhGaWxlcyA9IG9wdGlvbnNbJ21heEZpbGVzJ10gfHwgMDtcbiAgICB0aGlzLnNob3dQcmV2aWV3ID0gb3B0aW9uc1snc2hvd1ByZXZpZXcnXSB8fCBmYWxzZTtcbiAgICB0aGlzLnVybCA9IG9wdGlvbnNbJ3VybCddIHx8ICcnO1xuICAgIHRoaXMuaGVhZGVycyA9IG9wdGlvbnNbJ2hlYWRlcnMnXSB8fCBudWxsO1xuICAgIHRoaXMucGFyYW1OYW1lID0gb3B0aW9uc1sncGFyYW1OYW1lJ10gfHwgJ2ZpbGUnO1xuICAgIHRoaXMucmVzdWx0VHJhbnNmb3JtZXIgPSBvcHRpb25zWydyZXN1bHRUcmFuc2Zvcm1lciddO1xuICB9XG59XG4iXX0=