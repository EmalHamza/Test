/**
 * @fileoverview added by tsickle
 * Generated from: lib/models/UploadFileV2.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { InputBase } from './InputBase';
var UploadFileV2 = /** @class */ (function (_super) {
    tslib_1.__extends(UploadFileV2, _super);
    function UploadFileV2(options) {
        if (options === void 0) { options = {}; }
        var _this = _super.call(this, options) || this;
        _this.controlType = 'uploadfilev2';
        _this.id = options['id'] || 1;
        _this.accept = options['accept'] || '';
        _this.allowMaxSize = options['allowMaxSize'] || 2;
        _this.apiUpload = options['apiUpload'] || '';
        _this.headers = options['headers'] || {};
        _this.uploadPath = options['uploadPath'] || '';
        _this.multiple = options['multiple'] || false;
        _this.paramName = options['paramName'] || 'files';
        _this.resultTransformer = options['resultTransformer'];
        _this.title = options['title'] || 'Upload';
        _this.dataFunction = options['dataFunction'];
        _this.uploadFromDB = options['uploadFromDB'] || false;
        _this.width = options['width'];
        _this.maxWidth = options['maxWidth'];
        _this.height = options['height'];
        _this.maxHeight = options['maxHeight'];
        return _this;
    }
    return UploadFileV2;
}(InputBase));
export { UploadFileV2 };
if (false) {
    /** @type {?} */
    UploadFileV2.prototype.controlType;
    /** @type {?} */
    UploadFileV2.prototype.id;
    /** @type {?} */
    UploadFileV2.prototype.accept;
    /** @type {?} */
    UploadFileV2.prototype.allowMaxSize;
    /** @type {?} */
    UploadFileV2.prototype.apiUpload;
    /** @type {?} */
    UploadFileV2.prototype.headers;
    /** @type {?} */
    UploadFileV2.prototype.uploadPath;
    /** @type {?} */
    UploadFileV2.prototype.multiple;
    /** @type {?} */
    UploadFileV2.prototype.paramName;
    /** @type {?} */
    UploadFileV2.prototype.resultTransformer;
    /** @type {?} */
    UploadFileV2.prototype.title;
    /** @type {?} */
    UploadFileV2.prototype.dataFunction;
    /** @type {?} */
    UploadFileV2.prototype.uploadFromDB;
    /** @type {?} */
    UploadFileV2.prototype.width;
    /** @type {?} */
    UploadFileV2.prototype.maxWidth;
    /** @type {?} */
    UploadFileV2.prototype.height;
    /** @type {?} */
    UploadFileV2.prototype.maxHeight;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVXBsb2FkRmlsZVYyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHZpY29kZXJzL3JlYWN0aXZlLWZvcm0vIiwic291cmNlcyI6WyJsaWIvbW9kZWxzL1VwbG9hZEZpbGVWMi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBRXhDO0lBQWtDLHdDQUFpQjtJQW1CakQsc0JBQVksT0FBZ0I7UUFBaEIsd0JBQUEsRUFBQSxZQUFnQjtRQUE1QixZQUNFLGtCQUFNLE9BQU8sQ0FBQyxTQWlCZjtRQXBDRCxpQkFBVyxHQUFHLGNBQWMsQ0FBQztRQW9CM0IsS0FBSSxDQUFDLEVBQUUsR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzdCLEtBQUksQ0FBQyxNQUFNLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUN0QyxLQUFJLENBQUMsWUFBWSxHQUFHLE9BQU8sQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDakQsS0FBSSxDQUFDLFNBQVMsR0FBRyxPQUFPLENBQUMsV0FBVyxDQUFDLElBQUksRUFBRSxDQUFDO1FBQzVDLEtBQUksQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDLFNBQVMsQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUN4QyxLQUFJLENBQUMsVUFBVSxHQUFHLE9BQU8sQ0FBQyxZQUFZLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDOUMsS0FBSSxDQUFDLFFBQVEsR0FBRyxPQUFPLENBQUMsVUFBVSxDQUFDLElBQUksS0FBSyxDQUFDO1FBQzdDLEtBQUksQ0FBQyxTQUFTLEdBQUcsT0FBTyxDQUFDLFdBQVcsQ0FBQyxJQUFJLE9BQU8sQ0FBQztRQUNqRCxLQUFJLENBQUMsaUJBQWlCLEdBQUcsT0FBTyxDQUFDLG1CQUFtQixDQUFDLENBQUM7UUFDdEQsS0FBSSxDQUFDLEtBQUssR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDLElBQUksUUFBUSxDQUFDO1FBQzFDLEtBQUksQ0FBQyxZQUFZLEdBQUcsT0FBTyxDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBQzVDLEtBQUksQ0FBQyxZQUFZLEdBQUcsT0FBTyxDQUFDLGNBQWMsQ0FBQyxJQUFJLEtBQUssQ0FBQztRQUNyRCxLQUFJLENBQUMsS0FBSyxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUM5QixLQUFJLENBQUMsUUFBUSxHQUFHLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUNwQyxLQUFJLENBQUMsTUFBTSxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUNoQyxLQUFJLENBQUMsU0FBUyxHQUFHLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQzs7SUFDeEMsQ0FBQztJQUNILG1CQUFDO0FBQUQsQ0FBQyxBQXRDRCxDQUFrQyxTQUFTLEdBc0MxQzs7OztJQXJDQyxtQ0FBNkI7O0lBQzdCLDBCQUFXOztJQUNYLDhCQUFlOztJQUNmLG9DQUFxQjs7SUFDckIsaUNBQWtCOztJQUNsQiwrQkFBZ0I7O0lBQ2hCLGtDQUFtQjs7SUFDbkIsZ0NBQWtCOztJQUNsQixpQ0FBa0I7O0lBQ2xCLHlDQUE0Qjs7SUFDNUIsNkJBQWM7O0lBQ2Qsb0NBQXVCOztJQUN2QixvQ0FBc0I7O0lBQ3RCLDZCQUFjOztJQUNkLGdDQUFpQjs7SUFDakIsOEJBQWU7O0lBQ2YsaUNBQWtCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5wdXRCYXNlIH0gZnJvbSAnLi9JbnB1dEJhc2UnO1xuXG5leHBvcnQgY2xhc3MgVXBsb2FkRmlsZVYyIGV4dGVuZHMgSW5wdXRCYXNlPHN0cmluZz4ge1xuICBjb250cm9sVHlwZSA9ICd1cGxvYWRmaWxldjInO1xuICBpZDogbnVtYmVyO1xuICBhY2NlcHQ6IHN0cmluZztcbiAgYWxsb3dNYXhTaXplOiBudW1iZXI7XG4gIGFwaVVwbG9hZDogc3RyaW5nO1xuICBoZWFkZXJzOiBvYmplY3Q7XG4gIHVwbG9hZFBhdGg6IHN0cmluZztcbiAgbXVsdGlwbGU6IGJvb2xlYW47XG4gIHBhcmFtTmFtZTogc3RyaW5nO1xuICByZXN1bHRUcmFuc2Zvcm1lcjogRnVuY3Rpb247XG4gIHRpdGxlOiBzdHJpbmc7XG4gIGRhdGFGdW5jdGlvbjogRnVuY3Rpb247XG4gIHVwbG9hZEZyb21EQjogYm9vbGVhbjtcbiAgd2lkdGg6IHN0cmluZztcbiAgbWF4V2lkdGg6IHN0cmluZztcbiAgaGVpZ2h0OiBzdHJpbmc7XG4gIG1heEhlaWdodDogc3RyaW5nO1xuXG4gIGNvbnN0cnVjdG9yKG9wdGlvbnM6IHt9ID0ge30pIHtcbiAgICBzdXBlcihvcHRpb25zKTtcbiAgICB0aGlzLmlkID0gb3B0aW9uc1snaWQnXSB8fCAxO1xuICAgIHRoaXMuYWNjZXB0ID0gb3B0aW9uc1snYWNjZXB0J10gfHwgJyc7XG4gICAgdGhpcy5hbGxvd01heFNpemUgPSBvcHRpb25zWydhbGxvd01heFNpemUnXSB8fCAyO1xuICAgIHRoaXMuYXBpVXBsb2FkID0gb3B0aW9uc1snYXBpVXBsb2FkJ10gfHwgJyc7XG4gICAgdGhpcy5oZWFkZXJzID0gb3B0aW9uc1snaGVhZGVycyddIHx8IHt9O1xuICAgIHRoaXMudXBsb2FkUGF0aCA9IG9wdGlvbnNbJ3VwbG9hZFBhdGgnXSB8fCAnJztcbiAgICB0aGlzLm11bHRpcGxlID0gb3B0aW9uc1snbXVsdGlwbGUnXSB8fCBmYWxzZTtcbiAgICB0aGlzLnBhcmFtTmFtZSA9IG9wdGlvbnNbJ3BhcmFtTmFtZSddIHx8ICdmaWxlcyc7XG4gICAgdGhpcy5yZXN1bHRUcmFuc2Zvcm1lciA9IG9wdGlvbnNbJ3Jlc3VsdFRyYW5zZm9ybWVyJ107XG4gICAgdGhpcy50aXRsZSA9IG9wdGlvbnNbJ3RpdGxlJ10gfHwgJ1VwbG9hZCc7XG4gICAgdGhpcy5kYXRhRnVuY3Rpb24gPSBvcHRpb25zWydkYXRhRnVuY3Rpb24nXTtcbiAgICB0aGlzLnVwbG9hZEZyb21EQiA9IG9wdGlvbnNbJ3VwbG9hZEZyb21EQiddIHx8IGZhbHNlO1xuICAgIHRoaXMud2lkdGggPSBvcHRpb25zWyd3aWR0aCddO1xuICAgIHRoaXMubWF4V2lkdGggPSBvcHRpb25zWydtYXhXaWR0aCddO1xuICAgIHRoaXMuaGVpZ2h0ID0gb3B0aW9uc1snaGVpZ2h0J107XG4gICAgdGhpcy5tYXhIZWlnaHQgPSBvcHRpb25zWydtYXhIZWlnaHQnXTtcbiAgfVxufVxuIl19