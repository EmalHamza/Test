/**
 * @fileoverview added by tsickle
 * Generated from: lib/models/SelectionByApi.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { InputBase } from './InputBase';
var SelectionByApi = /** @class */ (function (_super) {
    tslib_1.__extends(SelectionByApi, _super);
    function SelectionByApi(options) {
        if (options === void 0) { options = {}; }
        var _this = _super.call(this, options) || this;
        _this.controlType = 'selection-by-api';
        _this.resultTransformer = options['resultTransformer'] || null;
        _this.apiUpload = options['apiUpload'] || '';
        _this.headers = options['headers'] || null;
        _this.fieldName = options['fieldName'] || null;
        _this.multiple = options['multiple'] || false;
        _this.lengthToSearch = options['lengthToSearch'] || 3;
        _this.method = options['method'] || 'get';
        _this.id = options['id'] || 1;
        return _this;
    }
    return SelectionByApi;
}(InputBase));
export { SelectionByApi };
if (false) {
    /** @type {?} */
    SelectionByApi.prototype.controlType;
    /** @type {?} */
    SelectionByApi.prototype.resultTransformer;
    /** @type {?} */
    SelectionByApi.prototype.headers;
    /** @type {?} */
    SelectionByApi.prototype.apiUpload;
    /** @type {?} */
    SelectionByApi.prototype.fieldName;
    /** @type {?} */
    SelectionByApi.prototype.multiple;
    /** @type {?} */
    SelectionByApi.prototype.lengthToSearch;
    /** @type {?} */
    SelectionByApi.prototype.method;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2VsZWN0aW9uQnlBcGkuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Admljb2RlcnMvcmVhY3RpdmUtZm9ybS8iLCJzb3VyY2VzIjpbImxpYi9tb2RlbHMvU2VsZWN0aW9uQnlBcGkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUV4QztJQUFvQywwQ0FBaUI7SUFVbkQsd0JBQVksT0FBZ0I7UUFBaEIsd0JBQUEsRUFBQSxZQUFnQjtRQUE1QixZQUNFLGtCQUFNLE9BQU8sQ0FBQyxTQVNmO1FBbkJELGlCQUFXLEdBQUcsa0JBQWtCLENBQUM7UUFXL0IsS0FBSSxDQUFDLGlCQUFpQixHQUFHLE9BQU8sQ0FBQyxtQkFBbUIsQ0FBQyxJQUFJLElBQUksQ0FBQztRQUM5RCxLQUFJLENBQUMsU0FBUyxHQUFHLE9BQU8sQ0FBQyxXQUFXLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDNUMsS0FBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUMsU0FBUyxDQUFDLElBQUksSUFBSSxDQUFDO1FBQzFDLEtBQUksQ0FBQyxTQUFTLEdBQUcsT0FBTyxDQUFDLFdBQVcsQ0FBQyxJQUFJLElBQUksQ0FBQztRQUM5QyxLQUFJLENBQUMsUUFBUSxHQUFHLE9BQU8sQ0FBQyxVQUFVLENBQUMsSUFBSSxLQUFLLENBQUM7UUFDN0MsS0FBSSxDQUFDLGNBQWMsR0FBRyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDckQsS0FBSSxDQUFDLE1BQU0sR0FBRyxPQUFPLENBQUMsUUFBUSxDQUFDLElBQUksS0FBSyxDQUFDO1FBQ3pDLEtBQUksQ0FBQyxFQUFFLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQzs7SUFDL0IsQ0FBQztJQUNILHFCQUFDO0FBQUQsQ0FBQyxBQXJCRCxDQUFvQyxTQUFTLEdBcUI1Qzs7OztJQXBCQyxxQ0FBaUM7O0lBQ2pDLDJDQUE0Qjs7SUFDNUIsaUNBQWdCOztJQUNoQixtQ0FBa0I7O0lBQ2xCLG1DQUFvQjs7SUFDcEIsa0NBQWtCOztJQUNsQix3Q0FBdUI7O0lBQ3ZCLGdDQUFlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5wdXRCYXNlIH0gZnJvbSAnLi9JbnB1dEJhc2UnO1xuXG5leHBvcnQgY2xhc3MgU2VsZWN0aW9uQnlBcGkgZXh0ZW5kcyBJbnB1dEJhc2U8c3RyaW5nPiB7XG4gIGNvbnRyb2xUeXBlID0gJ3NlbGVjdGlvbi1ieS1hcGknO1xuICByZXN1bHRUcmFuc2Zvcm1lcjogRnVuY3Rpb247XG4gIGhlYWRlcnM6IG9iamVjdDtcbiAgYXBpVXBsb2FkOiBzdHJpbmc7XG4gIGZpZWxkTmFtZTogRnVuY3Rpb247XG4gIG11bHRpcGxlOiBib29sZWFuO1xuICBsZW5ndGhUb1NlYXJjaDogbnVtYmVyO1xuICBtZXRob2Q6IHN0cmluZztcblxuICBjb25zdHJ1Y3RvcihvcHRpb25zOiB7fSA9IHt9KSB7XG4gICAgc3VwZXIob3B0aW9ucyk7XG4gICAgdGhpcy5yZXN1bHRUcmFuc2Zvcm1lciA9IG9wdGlvbnNbJ3Jlc3VsdFRyYW5zZm9ybWVyJ10gfHwgbnVsbDtcbiAgICB0aGlzLmFwaVVwbG9hZCA9IG9wdGlvbnNbJ2FwaVVwbG9hZCddIHx8ICcnO1xuICAgIHRoaXMuaGVhZGVycyA9IG9wdGlvbnNbJ2hlYWRlcnMnXSB8fCBudWxsO1xuICAgIHRoaXMuZmllbGROYW1lID0gb3B0aW9uc1snZmllbGROYW1lJ10gfHwgbnVsbDtcbiAgICB0aGlzLm11bHRpcGxlID0gb3B0aW9uc1snbXVsdGlwbGUnXSB8fCBmYWxzZTtcbiAgICB0aGlzLmxlbmd0aFRvU2VhcmNoID0gb3B0aW9uc1snbGVuZ3RoVG9TZWFyY2gnXSB8fCAzO1xuICAgIHRoaXMubWV0aG9kID0gb3B0aW9uc1snbWV0aG9kJ10gfHwgJ2dldCc7XG4gICAgdGhpcy5pZCA9IG9wdGlvbnNbJ2lkJ10gfHwgMTtcbiAgfVxufVxuIl19