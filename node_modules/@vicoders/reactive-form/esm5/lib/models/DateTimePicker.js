/**
 * @fileoverview added by tsickle
 * Generated from: lib/models/DateTimePicker.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { InputBase } from './InputBase';
var DateTimePicker = /** @class */ (function (_super) {
    tslib_1.__extends(DateTimePicker, _super);
    function DateTimePicker(options) {
        if (options === void 0) { options = {}; }
        var _this = _super.call(this, options) || this;
        _this.controlType = 'datetimepicker';
        _this.showIcon = options['showIcon'] || false;
        _this.monthNavigator = options['monthNavigator'] || false;
        _this.yearNavigator = options['yearNavigator'] || false;
        _this.yearRange = options['yearRange'] || '1995:2050';
        _this.showTime = options['showTime'] || false;
        _this.timeOnly = options['timeOnly'] || false;
        _this.dateFormat = options['dateFormat'] || 'dd/mm/yy';
        _this.minDate = options['minDate'] || null;
        _this.maxDate = options['maxDate'] || null;
        return _this;
    }
    return DateTimePicker;
}(InputBase));
export { DateTimePicker };
if (false) {
    /** @type {?} */
    DateTimePicker.prototype.controlType;
    /** @type {?} */
    DateTimePicker.prototype.showIcon;
    /** @type {?} */
    DateTimePicker.prototype.monthNavigator;
    /** @type {?} */
    DateTimePicker.prototype.yearNavigator;
    /** @type {?} */
    DateTimePicker.prototype.yearRange;
    /** @type {?} */
    DateTimePicker.prototype.showTime;
    /** @type {?} */
    DateTimePicker.prototype.timeOnly;
    /** @type {?} */
    DateTimePicker.prototype.dateFormat;
    /** @type {?} */
    DateTimePicker.prototype.minDate;
    /** @type {?} */
    DateTimePicker.prototype.maxDate;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGF0ZVRpbWVQaWNrZXIuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Admljb2RlcnMvcmVhY3RpdmUtZm9ybS8iLCJzb3VyY2VzIjpbImxpYi9tb2RlbHMvRGF0ZVRpbWVQaWNrZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUV4QztJQUFvQywwQ0FBaUI7SUFZbkQsd0JBQVksT0FBZ0I7UUFBaEIsd0JBQUEsRUFBQSxZQUFnQjtRQUE1QixZQUNFLGtCQUFNLE9BQU8sQ0FBQyxTQVVmO1FBdEJELGlCQUFXLEdBQUcsZ0JBQWdCLENBQUM7UUFhN0IsS0FBSSxDQUFDLFFBQVEsR0FBRyxPQUFPLENBQUMsVUFBVSxDQUFDLElBQUksS0FBSyxDQUFDO1FBQzdDLEtBQUksQ0FBQyxjQUFjLEdBQUcsT0FBTyxDQUFDLGdCQUFnQixDQUFDLElBQUksS0FBSyxDQUFDO1FBQ3pELEtBQUksQ0FBQyxhQUFhLEdBQUcsT0FBTyxDQUFDLGVBQWUsQ0FBQyxJQUFJLEtBQUssQ0FBQztRQUN2RCxLQUFJLENBQUMsU0FBUyxHQUFHLE9BQU8sQ0FBQyxXQUFXLENBQUMsSUFBSSxXQUFXLENBQUM7UUFDckQsS0FBSSxDQUFDLFFBQVEsR0FBRyxPQUFPLENBQUMsVUFBVSxDQUFDLElBQUksS0FBSyxDQUFDO1FBQzdDLEtBQUksQ0FBQyxRQUFRLEdBQUcsT0FBTyxDQUFDLFVBQVUsQ0FBQyxJQUFJLEtBQUssQ0FBQztRQUM3QyxLQUFJLENBQUMsVUFBVSxHQUFHLE9BQU8sQ0FBQyxZQUFZLENBQUMsSUFBSSxVQUFVLENBQUM7UUFDdEQsS0FBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUMsU0FBUyxDQUFDLElBQUksSUFBSSxDQUFDO1FBQzFDLEtBQUksQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDLFNBQVMsQ0FBQyxJQUFJLElBQUksQ0FBQzs7SUFDNUMsQ0FBQztJQUNILHFCQUFDO0FBQUQsQ0FBQyxBQXhCRCxDQUFvQyxTQUFTLEdBd0I1Qzs7OztJQXZCQyxxQ0FBK0I7O0lBQy9CLGtDQUFrQjs7SUFDbEIsd0NBQXdCOztJQUN4Qix1Q0FBdUI7O0lBQ3ZCLG1DQUFrQjs7SUFDbEIsa0NBQWtCOztJQUNsQixrQ0FBa0I7O0lBQ2xCLG9DQUFtQjs7SUFDbkIsaUNBQWM7O0lBQ2QsaUNBQWMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbnB1dEJhc2UgfSBmcm9tICcuL0lucHV0QmFzZSc7XG5cbmV4cG9ydCBjbGFzcyBEYXRlVGltZVBpY2tlciBleHRlbmRzIElucHV0QmFzZTxzdHJpbmc+IHtcbiAgY29udHJvbFR5cGUgPSAnZGF0ZXRpbWVwaWNrZXInO1xuICBzaG93SWNvbjogQm9vbGVhbjtcbiAgbW9udGhOYXZpZ2F0b3I6IEJvb2xlYW47XG4gIHllYXJOYXZpZ2F0b3I6IEJvb2xlYW47XG4gIHllYXJSYW5nZTogc3RyaW5nO1xuICBzaG93VGltZTogQm9vbGVhbjtcbiAgdGltZU9ubHk6IEJvb2xlYW47XG4gIGRhdGVGb3JtYXQ6IHN0cmluZztcbiAgbWluRGF0ZTogRGF0ZTtcbiAgbWF4RGF0ZTogRGF0ZTtcblxuICBjb25zdHJ1Y3RvcihvcHRpb25zOiB7fSA9IHt9KSB7XG4gICAgc3VwZXIob3B0aW9ucyk7XG4gICAgdGhpcy5zaG93SWNvbiA9IG9wdGlvbnNbJ3Nob3dJY29uJ10gfHwgZmFsc2U7XG4gICAgdGhpcy5tb250aE5hdmlnYXRvciA9IG9wdGlvbnNbJ21vbnRoTmF2aWdhdG9yJ10gfHwgZmFsc2U7XG4gICAgdGhpcy55ZWFyTmF2aWdhdG9yID0gb3B0aW9uc1sneWVhck5hdmlnYXRvciddIHx8IGZhbHNlO1xuICAgIHRoaXMueWVhclJhbmdlID0gb3B0aW9uc1sneWVhclJhbmdlJ10gfHwgJzE5OTU6MjA1MCc7XG4gICAgdGhpcy5zaG93VGltZSA9IG9wdGlvbnNbJ3Nob3dUaW1lJ10gfHwgZmFsc2U7XG4gICAgdGhpcy50aW1lT25seSA9IG9wdGlvbnNbJ3RpbWVPbmx5J10gfHwgZmFsc2U7XG4gICAgdGhpcy5kYXRlRm9ybWF0ID0gb3B0aW9uc1snZGF0ZUZvcm1hdCddIHx8ICdkZC9tbS95eSc7XG4gICAgdGhpcy5taW5EYXRlID0gb3B0aW9uc1snbWluRGF0ZSddIHx8IG51bGw7XG4gICAgdGhpcy5tYXhEYXRlID0gb3B0aW9uc1snbWF4RGF0ZSddIHx8IG51bGw7XG4gIH1cbn1cbiJdfQ==