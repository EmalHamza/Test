/**
 * @fileoverview added by tsickle
 * Generated from: lib/directives/custom-switch-input/custom-switch-input.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, forwardRef, Input, ElementRef } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
var CustomSwitchInputComponent = /** @class */ (function () {
    function CustomSwitchInputComponent(element) {
        this.element = element;
        this.onChange = (/**
         * @param {?} val
         * @return {?}
         */
        function (val) { });
        this.onTouched = (/**
         * @return {?}
         */
        function () { });
        this.disabled = false;
    }
    /**
     * @param {?} val
     * @return {?}
     */
    CustomSwitchInputComponent.prototype.writeValue = /**
     * @param {?} val
     * @return {?}
     */
    function (val) {
        if (val) {
            this.value = val;
        }
    };
    Object.defineProperty(CustomSwitchInputComponent.prototype, "value", {
        get: /**
         * @return {?}
         */
        function () {
            return this._value;
        },
        set: /**
         * @param {?} val
         * @return {?}
         */
        function (val) {
            this._value = val;
            this.onChange(this._value);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} fn
     * @return {?}
     */
    CustomSwitchInputComponent.prototype.registerOnChange = /**
     * @param {?} fn
     * @return {?}
     */
    function (fn) {
        this.onChange = fn;
    };
    /**
     * @param {?} fn
     * @return {?}
     */
    CustomSwitchInputComponent.prototype.registerOnTouched = /**
     * @param {?} fn
     * @return {?}
     */
    function (fn) {
        this.onTouched = fn;
    };
    /**
     * @param {?} isDisabled
     * @return {?}
     */
    CustomSwitchInputComponent.prototype.setDisabledState = /**
     * @param {?} isDisabled
     * @return {?}
     */
    function (isDisabled) {
        this.disabled = isDisabled;
    };
    /**
     * @return {?}
     */
    CustomSwitchInputComponent.prototype.ngOnChanges = /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.isClear === true) {
            setTimeout((/**
             * @return {?}
             */
            function () {
                _this.value = false;
            }), 1);
        }
    };
    /**
     * @return {?}
     */
    CustomSwitchInputComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        setTimeout((/**
         * @return {?}
         */
        function () {
            if (!_this.value || _this.value === '') {
                _this.value = false;
            }
        }), 1);
    };
    /**
     * @param {?} values
     * @return {?}
     */
    CustomSwitchInputComponent.prototype.FieldsChange = /**
     * @param {?} values
     * @return {?}
     */
    function (values) {
        this.value = values.currentTarget.checked;
    };
    CustomSwitchInputComponent.decorators = [
        { type: Component, args: [{
                    // tslint:disable-next-line:component-selector
                    selector: 'custom-switch-input',
                    template: "<!-- <input type=\"checkbox\" [(ngModel)]=\"value\" id=\"switch\" (change)=\"FieldsChange($event)\" /><label for=\"switch\">Toggle</label> -->\n<div class=\"flatRoundedCheckbox\">\n  <input\n    [disabled]=\"isDisabled\"\n    type=\"checkbox\"\n    [(ngModel)]=\"value\"\n    id=\"rf_switch-{{ id }}\"\n    (change)=\"FieldsChange($event)\"\n    type=\"checkbox\"\n    name=\"\"\n    id=\"t2\"\n    checked\n  />\n  <label for=\"rf_switch-{{ id }}\"></label>\n  <div></div>\n</div>\n",
                    providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef((/**
                             * @return {?}
                             */
                            function () { return CustomSwitchInputComponent; })),
                            multi: true
                        }
                    ],
                    styles: [".flatRoundedCheckbox{width:25px;height:11px;position:relative}.flatRoundedCheckbox div{width:100%;height:100%;background:#7b7b7b;border-radius:50px;position:relative;top:-21px}.flatRoundedCheckbox label{display:block;width:16px;height:16px;border-radius:50px;-webkit-transition:.5s;transition:.5s;cursor:pointer;position:absolute;top:-2px;z-index:1;left:-6px;background:#fff;box-shadow:0 3px 6px 0 #00000029}.flatRoundedCheckbox input[type=checkbox]{width:0;height:0;opacity:0}.flatRoundedCheckbox input[type=checkbox]:checked~div{background:#4cd964}.flatRoundedCheckbox input[type=checkbox]:checked~label{left:15px}"]
                }] }
    ];
    /** @nocollapse */
    CustomSwitchInputComponent.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    CustomSwitchInputComponent.propDecorators = {
        _value: [{ type: Input }],
        isClear: [{ type: Input }],
        id: [{ type: Input }],
        isDisabled: [{ type: Input }]
    };
    return CustomSwitchInputComponent;
}());
export { CustomSwitchInputComponent };
if (false) {
    /** @type {?} */
    CustomSwitchInputComponent.prototype._value;
    /** @type {?} */
    CustomSwitchInputComponent.prototype.isClear;
    /** @type {?} */
    CustomSwitchInputComponent.prototype.id;
    /** @type {?} */
    CustomSwitchInputComponent.prototype.isDisabled;
    /**
     * @type {?}
     * @private
     */
    CustomSwitchInputComponent.prototype.onChange;
    /**
     * @type {?}
     * @private
     */
    CustomSwitchInputComponent.prototype.disabled;
    /**
     * @type {?}
     * @private
     */
    CustomSwitchInputComponent.prototype.onTouched;
    /**
     * @type {?}
     * @private
     */
    CustomSwitchInputComponent.prototype.element;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3VzdG9tLXN3aXRjaC1pbnB1dC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Admljb2RlcnMvcmVhY3RpdmUtZm9ybS8iLCJzb3VyY2VzIjpbImxpYi9kaXJlY3RpdmVzL2N1c3RvbS1zd2l0Y2gtaW5wdXQvY3VzdG9tLXN3aXRjaC1pbnB1dC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLFVBQVUsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUE0QixNQUFNLGVBQWUsQ0FBQztBQUMzRyxPQUFPLEVBQUUsaUJBQWlCLEVBQXdCLE1BQU0sZ0JBQWdCLENBQUM7QUFFekU7SUF3QkUsb0NBQW9CLE9BQW1CO1FBQW5CLFlBQU8sR0FBUCxPQUFPLENBQVk7UUFDckMsSUFBSSxDQUFDLFFBQVE7Ozs7UUFBRyxVQUFDLEdBQVEsSUFBTSxDQUFDLENBQUEsQ0FBQztRQUNqQyxJQUFJLENBQUMsU0FBUzs7O1FBQUcsY0FBTyxDQUFDLENBQUEsQ0FBQztRQUMxQixJQUFJLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQztJQUN4QixDQUFDOzs7OztJQUVELCtDQUFVOzs7O0lBQVYsVUFBVyxHQUFRO1FBQ2pCLElBQUksR0FBRyxFQUFFO1lBQ1AsSUFBSSxDQUFDLEtBQUssR0FBRyxHQUFHLENBQUM7U0FDbEI7SUFDSCxDQUFDO0lBRUQsc0JBQUksNkNBQUs7Ozs7UUFBVDtZQUNFLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQztRQUNyQixDQUFDOzs7OztRQUVELFVBQVUsR0FBRztZQUNYLElBQUksQ0FBQyxNQUFNLEdBQUcsR0FBRyxDQUFDO1lBQ2xCLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzdCLENBQUM7OztPQUxBOzs7OztJQU9ELHFEQUFnQjs7OztJQUFoQixVQUFpQixFQUFPO1FBQ3RCLElBQUksQ0FBQyxRQUFRLEdBQUcsRUFBRSxDQUFDO0lBQ3JCLENBQUM7Ozs7O0lBRUQsc0RBQWlCOzs7O0lBQWpCLFVBQWtCLEVBQU87UUFDdkIsSUFBSSxDQUFDLFNBQVMsR0FBRyxFQUFFLENBQUM7SUFDdEIsQ0FBQzs7Ozs7SUFFRCxxREFBZ0I7Ozs7SUFBaEIsVUFBaUIsVUFBbUI7UUFDbEMsSUFBSSxDQUFDLFFBQVEsR0FBRyxVQUFVLENBQUM7SUFDN0IsQ0FBQzs7OztJQUVELGdEQUFXOzs7SUFBWDtRQUFBLGlCQU1DO1FBTEMsSUFBSSxJQUFJLENBQUMsT0FBTyxLQUFLLElBQUksRUFBRTtZQUN6QixVQUFVOzs7WUFBQztnQkFDVCxLQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztZQUNyQixDQUFDLEdBQUUsQ0FBQyxDQUFDLENBQUM7U0FDUDtJQUNILENBQUM7Ozs7SUFFRCxvREFBZTs7O0lBQWY7UUFBQSxpQkFNQztRQUxDLFVBQVU7OztRQUFDO1lBQ1QsSUFBSSxDQUFDLEtBQUksQ0FBQyxLQUFLLElBQUksS0FBSSxDQUFDLEtBQUssS0FBSyxFQUFFLEVBQUU7Z0JBQ3BDLEtBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO2FBQ3BCO1FBQ0gsQ0FBQyxHQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ1IsQ0FBQzs7Ozs7SUFFRCxpREFBWTs7OztJQUFaLFVBQWEsTUFBVztRQUN0QixJQUFJLENBQUMsS0FBSyxHQUFHLE1BQU0sQ0FBQyxhQUFhLENBQUMsT0FBTyxDQUFDO0lBQzVDLENBQUM7O2dCQTNFRixTQUFTLFNBQUM7O29CQUVULFFBQVEsRUFBRSxxQkFBcUI7b0JBQy9CLCtlQUFtRDtvQkFFbkQsU0FBUyxFQUFFO3dCQUNUOzRCQUNFLE9BQU8sRUFBRSxpQkFBaUI7NEJBQzFCLFdBQVcsRUFBRSxVQUFVOzs7NEJBQUMsY0FBTSxPQUFBLDBCQUEwQixFQUExQixDQUEwQixFQUFDOzRCQUN6RCxLQUFLLEVBQUUsSUFBSTt5QkFDWjtxQkFDRjs7aUJBQ0Y7Ozs7Z0JBZjhDLFVBQVU7Ozt5QkFpQnRELEtBQUs7MEJBQ0wsS0FBSztxQkFDTCxLQUFLOzZCQUNMLEtBQUs7O0lBMkRSLGlDQUFDO0NBQUEsQUE1RUQsSUE0RUM7U0EvRFksMEJBQTBCOzs7SUFDckMsNENBQWdCOztJQUNoQiw2Q0FBMEI7O0lBQzFCLHdDQUFZOztJQUNaLGdEQUE2Qjs7Ozs7SUFHN0IsOENBQTJCOzs7OztJQUMzQiw4Q0FBMEI7Ozs7O0lBQzFCLCtDQUE0Qjs7Ozs7SUFFaEIsNkNBQTJCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIGZvcndhcmRSZWYsIElucHV0LCBFbGVtZW50UmVmLCBBZnRlclZpZXdJbml0LCBPbkNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE5HX1ZBTFVFX0FDQ0VTU09SLCBDb250cm9sVmFsdWVBY2Nlc3NvciB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcblxuQENvbXBvbmVudCh7XG4gIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpjb21wb25lbnQtc2VsZWN0b3JcbiAgc2VsZWN0b3I6ICdjdXN0b20tc3dpdGNoLWlucHV0JyxcbiAgdGVtcGxhdGVVcmw6ICcuL2N1c3RvbS1zd2l0Y2gtaW5wdXQuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9jdXN0b20tc3dpdGNoLWlucHV0LmNvbXBvbmVudC5zY3NzJ10sXG4gIHByb3ZpZGVyczogW1xuICAgIHtcbiAgICAgIHByb3ZpZGU6IE5HX1ZBTFVFX0FDQ0VTU09SLFxuICAgICAgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gQ3VzdG9tU3dpdGNoSW5wdXRDb21wb25lbnQpLFxuICAgICAgbXVsdGk6IHRydWVcbiAgICB9XG4gIF1cbn0pXG5leHBvcnQgY2xhc3MgQ3VzdG9tU3dpdGNoSW5wdXRDb21wb25lbnQgaW1wbGVtZW50cyBBZnRlclZpZXdJbml0LCBDb250cm9sVmFsdWVBY2Nlc3NvciwgT25DaGFuZ2VzIHtcbiAgQElucHV0KCkgX3ZhbHVlO1xuICBASW5wdXQoKSBpc0NsZWFyOiBCb29sZWFuO1xuICBASW5wdXQoKSBpZDtcbiAgQElucHV0KCkgaXNEaXNhYmxlZDogQm9vbGVhbjtcblxuXG4gIHByaXZhdGUgb25DaGFuZ2U6IEZ1bmN0aW9uO1xuICBwcml2YXRlIGRpc2FibGVkOiBib29sZWFuO1xuICBwcml2YXRlIG9uVG91Y2hlZDogRnVuY3Rpb247XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBlbGVtZW50OiBFbGVtZW50UmVmKSB7XG4gICAgdGhpcy5vbkNoYW5nZSA9ICh2YWw6IGFueSkgPT4ge307XG4gICAgdGhpcy5vblRvdWNoZWQgPSAoKSA9PiB7fTtcbiAgICB0aGlzLmRpc2FibGVkID0gZmFsc2U7XG4gIH1cblxuICB3cml0ZVZhbHVlKHZhbDogYW55KTogdm9pZCB7XG4gICAgaWYgKHZhbCkge1xuICAgICAgdGhpcy52YWx1ZSA9IHZhbDtcbiAgICB9XG4gIH1cblxuICBnZXQgdmFsdWUoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3ZhbHVlO1xuICB9XG5cbiAgc2V0IHZhbHVlKHZhbCkge1xuICAgIHRoaXMuX3ZhbHVlID0gdmFsO1xuICAgIHRoaXMub25DaGFuZ2UodGhpcy5fdmFsdWUpO1xuICB9XG5cbiAgcmVnaXN0ZXJPbkNoYW5nZShmbjogYW55KTogdm9pZCB7XG4gICAgdGhpcy5vbkNoYW5nZSA9IGZuO1xuICB9XG5cbiAgcmVnaXN0ZXJPblRvdWNoZWQoZm46IGFueSk6IHZvaWQge1xuICAgIHRoaXMub25Ub3VjaGVkID0gZm47XG4gIH1cblxuICBzZXREaXNhYmxlZFN0YXRlKGlzRGlzYWJsZWQ6IGJvb2xlYW4pOiB2b2lkIHtcbiAgICB0aGlzLmRpc2FibGVkID0gaXNEaXNhYmxlZDtcbiAgfVxuXG4gIG5nT25DaGFuZ2VzKCkge1xuICAgIGlmICh0aGlzLmlzQ2xlYXIgPT09IHRydWUpIHtcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICB0aGlzLnZhbHVlID0gZmFsc2U7XG4gICAgICB9LCAxKTtcbiAgICB9XG4gIH1cblxuICBuZ0FmdGVyVmlld0luaXQoKSB7XG4gICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICBpZiAoIXRoaXMudmFsdWUgfHwgdGhpcy52YWx1ZSA9PT0gJycpIHtcbiAgICAgICAgdGhpcy52YWx1ZSA9IGZhbHNlO1xuICAgICAgfVxuICAgIH0sIDEpO1xuICB9XG5cbiAgRmllbGRzQ2hhbmdlKHZhbHVlczogYW55KSB7XG4gICAgdGhpcy52YWx1ZSA9IHZhbHVlcy5jdXJyZW50VGFyZ2V0LmNoZWNrZWQ7XG4gIH1cbn1cbiJdfQ==