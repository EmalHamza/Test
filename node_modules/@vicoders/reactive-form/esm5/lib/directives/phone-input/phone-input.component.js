/**
 * @fileoverview added by tsickle
 * Generated from: lib/directives/phone-input/phone-input.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, Input, forwardRef } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { Countries } from './countries';
var PhoneInputComponent = /** @class */ (function () {
    function PhoneInputComponent() {
        this._value = {
            code: '',
            value: '',
            alpha2Code: ''
        };
        this.COUNTRIES = Countries;
        this.propagateChange = (/**
         * @param {?} val
         * @return {?}
         */
        function (val) { });
    }
    Object.defineProperty(PhoneInputComponent.prototype, "value", {
        get: /**
         * @return {?}
         */
        function () {
            return this._value;
        },
        set: /**
         * @param {?} val
         * @return {?}
         */
        function (val) {
            this._value = val;
            this.propagateChange(this._value);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    PhoneInputComponent.prototype.ngOnChanges = /**
     * @return {?}
     */
    function () {
        if (this.value) {
            $('#rf-phone-code')
                .select2()
                .val(this.value.code + '-' + this.value.alpha2Code)
                .trigger('change.select2');
        }
    };
    /**
     * @return {?}
     */
    PhoneInputComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var $this = this;
        setTimeout((/**
         * @return {?}
         */
        function () {
            $('#rf-phone-code').select2();
            if (_this.value) {
                $('#rf-phone-code')
                    .select2()
                    .val(_this.value.code + '-' + _this.value.alpha2Code)
                    .trigger('change.select2');
            }
            $('#rf-phone-code').change((/**
             * @return {?}
             */
            function () {
                // tslint:disable-next-line:prefer-const
                /** @type {?} */
                var val = $(this)
                    .val()
                    .split('-');
                $this.value = tslib_1.__assign({}, $this.value, { code: val[0], alpha2Code: val[1] });
            }));
        }), 1000);
    };
    /**
     * @param {?} val
     * @return {?}
     */
    PhoneInputComponent.prototype.selectCountry = /**
     * @param {?} val
     * @return {?}
     */
    function (val) {
        val = val.split('-');
        this.value = tslib_1.__assign({}, this.value, { code: val[0], alpha2Code: val[1] });
    };
    /**
     * @param {?} val
     * @return {?}
     */
    PhoneInputComponent.prototype.enterPhone = /**
     * @param {?} val
     * @return {?}
     */
    function (val) {
        this.value = tslib_1.__assign({}, this.value, { value: val });
    };
    /**
     * @param {?} value
     * @return {?}
     */
    PhoneInputComponent.prototype.writeValue = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        if (value !== undefined) {
            this.value = value;
        }
    };
    /**
     * @param {?} fn
     * @return {?}
     */
    PhoneInputComponent.prototype.registerOnChange = /**
     * @param {?} fn
     * @return {?}
     */
    function (fn) {
        this.propagateChange = fn;
    };
    /**
     * @return {?}
     */
    PhoneInputComponent.prototype.registerOnTouched = /**
     * @return {?}
     */
    function () { };
    PhoneInputComponent.decorators = [
        { type: Component, args: [{
                    // tslint:disable-next-line:component-selector
                    selector: 'app-phone-input',
                    template: "<div class=\"phone-box form-group\" id=\"rf-phone-code-group\">\n  <select\n    id=\"rf-phone-code\"\n    [attr.disabled]=\"isDisabled\"\n    #country\n    (change)=\"selectCountry(country.value)\"\n    class=\"phone-code\"\n    [(ngModel)]=\"value.code + '-' + value.alpha2Code\"\n    select2\n  >\n    <option value=\"{{ country.callingCodes[0] }}-{{ country.alpha2Code }}\" *ngFor=\"let country of COUNTRIES\">\n      <span>{{ country.name }}</span>\n    </option>\n  </select>\n  <div class=\"phone-number-box\" [ngClass]=\"{ disabled: isDisabled }\">\n    <span class=\"plus-code\" *ngIf=\"value.code\">(+{{ value.code }}) </span>\n    <input\n      [attr.disabled]=\"isDisabled\"\n      type=\"text\"\n      #phone\n      (change)=\"enterPhone(phone.value)\"\n      class=\"phone-value\"\n      [(ngModel)]=\"value.value\"\n    />\n  </div>\n</div>\n",
                    providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef((/**
                             * @return {?}
                             */
                            function () { return PhoneInputComponent; })),
                            multi: true
                        }
                    ],
                    styles: [".phone-box{position:relative;clear:both;border:1px solid #ccc;height:31px}.phone-box .phone-code{-webkit-appearance:none;-moz-appearance:none;appearance:none;border:0;background-color:#333;color:#fff;border-radius:0;float:left;padding:5px;margin-right:10px;width:120px}.phone-box .phone-number-box{line-height:27px}.phone-box .phone-number-box .phone-value{border:0;background-color:transparent;width:125px}.phone-box .disabled{background-color:#e9ecef}::ng-deep #rf-phone-code-group .select2-container{float:left}::ng-deep #rf-phone-code-group .plus-code{margin-left:12px}::ng-deep .select2-container .select2-selection--single{height:29px;border-radius:0;border:none;border-right:1px solid #ccc}"]
                }] }
    ];
    PhoneInputComponent.propDecorators = {
        isDisabled: [{ type: Input }],
        _value: [{ type: Input }]
    };
    return PhoneInputComponent;
}());
export { PhoneInputComponent };
if (false) {
    /** @type {?} */
    PhoneInputComponent.prototype.isDisabled;
    /** @type {?} */
    PhoneInputComponent.prototype._value;
    /** @type {?} */
    PhoneInputComponent.prototype.COUNTRIES;
    /** @type {?} */
    PhoneInputComponent.prototype.propagateChange;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGhvbmUtaW5wdXQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHZpY29kZXJzL3JlYWN0aXZlLWZvcm0vIiwic291cmNlcyI6WyJsaWIvZGlyZWN0aXZlcy9waG9uZS1pbnB1dC9waG9uZS1pbnB1dC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUE0QixNQUFNLGVBQWUsQ0FBQztBQUN2RixPQUFPLEVBQXdCLGlCQUFpQixFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDekUsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUl4QztJQUFBO1FBZVcsV0FBTSxHQUFHO1lBQ2hCLElBQUksRUFBRSxFQUFFO1lBQ1IsS0FBSyxFQUFFLEVBQUU7WUFDVCxVQUFVLEVBQUUsRUFBRTtTQUNmLENBQUM7UUFDSyxjQUFTLEdBQUcsU0FBUyxDQUFDO1FBQzdCLG9CQUFlOzs7O1FBQUcsVUFBQyxHQUFRLElBQU0sQ0FBQyxFQUFDO0lBNERyQyxDQUFDO0lBMURDLHNCQUFJLHNDQUFLOzs7O1FBQVQ7WUFDRSxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUM7UUFDckIsQ0FBQzs7Ozs7UUFFRCxVQUFVLEdBQUc7WUFDWCxJQUFJLENBQUMsTUFBTSxHQUFHLEdBQUcsQ0FBQztZQUNsQixJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNwQyxDQUFDOzs7T0FMQTs7OztJQU9ELHlDQUFXOzs7SUFBWDtRQUNFLElBQUksSUFBSSxDQUFDLEtBQUssRUFBRTtZQUNkLENBQUMsQ0FBQyxnQkFBZ0IsQ0FBQztpQkFDaEIsT0FBTyxFQUFFO2lCQUNULEdBQUcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksR0FBRyxHQUFHLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUM7aUJBQ2xELE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO1NBQzlCO0lBQ0gsQ0FBQzs7OztJQUVELDZDQUFlOzs7SUFBZjtRQUFBLGlCQWtCQzs7WUFqQk8sS0FBSyxHQUFHLElBQUk7UUFDbEIsVUFBVTs7O1FBQUM7WUFDVCxDQUFDLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxPQUFPLEVBQUUsQ0FBQztZQUM5QixJQUFJLEtBQUksQ0FBQyxLQUFLLEVBQUU7Z0JBQ2QsQ0FBQyxDQUFDLGdCQUFnQixDQUFDO3FCQUNoQixPQUFPLEVBQUU7cUJBQ1QsR0FBRyxDQUFDLEtBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxHQUFHLEdBQUcsR0FBRyxLQUFJLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQztxQkFDbEQsT0FBTyxDQUFDLGdCQUFnQixDQUFDLENBQUM7YUFDOUI7WUFDRCxDQUFDLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxNQUFNOzs7WUFBQzs7O29CQUVuQixHQUFHLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQztxQkFDaEIsR0FBRyxFQUFFO3FCQUNMLEtBQUssQ0FBQyxHQUFHLENBQUM7Z0JBQ2IsS0FBSyxDQUFDLEtBQUssd0JBQVEsS0FBSyxDQUFDLEtBQUssSUFBRSxJQUFJLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLFVBQVUsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUUsQ0FBQztZQUNyRSxDQUFDLEVBQUMsQ0FBQztRQUNMLENBQUMsR0FBRSxJQUFJLENBQUMsQ0FBQztJQUNYLENBQUM7Ozs7O0lBRUQsMkNBQWE7Ozs7SUFBYixVQUFjLEdBQUc7UUFDZixHQUFHLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNyQixJQUFJLENBQUMsS0FBSyx3QkFBUSxJQUFJLENBQUMsS0FBSyxJQUFFLElBQUksRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsVUFBVSxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRSxDQUFDO0lBQ25FLENBQUM7Ozs7O0lBRUQsd0NBQVU7Ozs7SUFBVixVQUFXLEdBQUc7UUFDWixJQUFJLENBQUMsS0FBSyx3QkFBUSxJQUFJLENBQUMsS0FBSyxJQUFFLEtBQUssRUFBRSxHQUFHLEdBQUUsQ0FBQztJQUM3QyxDQUFDOzs7OztJQUVELHdDQUFVOzs7O0lBQVYsVUFBVyxLQUFVO1FBQ25CLElBQUksS0FBSyxLQUFLLFNBQVMsRUFBRTtZQUN2QixJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztTQUNwQjtJQUNILENBQUM7Ozs7O0lBRUQsOENBQWdCOzs7O0lBQWhCLFVBQWlCLEVBQUU7UUFDakIsSUFBSSxDQUFDLGVBQWUsR0FBRyxFQUFFLENBQUM7SUFDNUIsQ0FBQzs7OztJQUVELCtDQUFpQjs7O0lBQWpCLGNBQXFCLENBQUM7O2dCQWhGdkIsU0FBUyxTQUFDOztvQkFFVCxRQUFRLEVBQUUsaUJBQWlCO29CQUMzQixvMkJBQTJDO29CQUUzQyxTQUFTLEVBQUU7d0JBQ1Q7NEJBQ0UsT0FBTyxFQUFFLGlCQUFpQjs0QkFDMUIsV0FBVyxFQUFFLFVBQVU7Ozs0QkFBQyxjQUFNLE9BQUEsbUJBQW1CLEVBQW5CLENBQW1CLEVBQUM7NEJBQ2xELEtBQUssRUFBRSxJQUFJO3lCQUNaO3FCQUNGOztpQkFDRjs7OzZCQUVFLEtBQUs7eUJBQ0wsS0FBSzs7SUFrRVIsMEJBQUM7Q0FBQSxBQWpGRCxJQWlGQztTQXBFWSxtQkFBbUI7OztJQUM5Qix5Q0FBNkI7O0lBQzdCLHFDQUlFOztJQUNGLHdDQUE2Qjs7SUFDN0IsOENBQW1DIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgZm9yd2FyZFJlZiwgQWZ0ZXJWaWV3SW5pdCwgT25DaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb250cm9sVmFsdWVBY2Nlc3NvciwgTkdfVkFMVUVfQUNDRVNTT1IgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBDb3VudHJpZXMgfSBmcm9tICcuL2NvdW50cmllcyc7XG5pbXBvcnQgKiBhcyBfIGZyb20gJ2xvZGFzaCc7XG5kZWNsYXJlIGNvbnN0ICQ6IGFueTtcblxuQENvbXBvbmVudCh7XG4gIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpjb21wb25lbnQtc2VsZWN0b3JcbiAgc2VsZWN0b3I6ICdhcHAtcGhvbmUtaW5wdXQnLFxuICB0ZW1wbGF0ZVVybDogJy4vcGhvbmUtaW5wdXQuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9waG9uZS1pbnB1dC5jb21wb25lbnQuc2NzcyddLFxuICBwcm92aWRlcnM6IFtcbiAgICB7XG4gICAgICBwcm92aWRlOiBOR19WQUxVRV9BQ0NFU1NPUixcbiAgICAgIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IFBob25lSW5wdXRDb21wb25lbnQpLFxuICAgICAgbXVsdGk6IHRydWVcbiAgICB9XG4gIF1cbn0pXG5leHBvcnQgY2xhc3MgUGhvbmVJbnB1dENvbXBvbmVudCBpbXBsZW1lbnRzIENvbnRyb2xWYWx1ZUFjY2Vzc29yLCBBZnRlclZpZXdJbml0LCBPbkNoYW5nZXMge1xuICBASW5wdXQoKSBpc0Rpc2FibGVkOiBCb29sZWFuO1xuICBASW5wdXQoKSBfdmFsdWUgPSB7XG4gICAgY29kZTogJycsXG4gICAgdmFsdWU6ICcnLFxuICAgIGFscGhhMkNvZGU6ICcnXG4gIH07XG4gIHB1YmxpYyBDT1VOVFJJRVMgPSBDb3VudHJpZXM7XG4gIHByb3BhZ2F0ZUNoYW5nZSA9ICh2YWw6IGFueSkgPT4ge307XG5cbiAgZ2V0IHZhbHVlKCkge1xuICAgIHJldHVybiB0aGlzLl92YWx1ZTtcbiAgfVxuXG4gIHNldCB2YWx1ZSh2YWwpIHtcbiAgICB0aGlzLl92YWx1ZSA9IHZhbDtcbiAgICB0aGlzLnByb3BhZ2F0ZUNoYW5nZSh0aGlzLl92YWx1ZSk7XG4gIH1cblxuICBuZ09uQ2hhbmdlcygpOiB2b2lkIHtcbiAgICBpZiAodGhpcy52YWx1ZSkge1xuICAgICAgJCgnI3JmLXBob25lLWNvZGUnKVxuICAgICAgICAuc2VsZWN0MigpXG4gICAgICAgIC52YWwodGhpcy52YWx1ZS5jb2RlICsgJy0nICsgdGhpcy52YWx1ZS5hbHBoYTJDb2RlKVxuICAgICAgICAudHJpZ2dlcignY2hhbmdlLnNlbGVjdDInKTtcbiAgICB9XG4gIH1cblxuICBuZ0FmdGVyVmlld0luaXQoKSB7XG4gICAgY29uc3QgJHRoaXMgPSB0aGlzO1xuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgJCgnI3JmLXBob25lLWNvZGUnKS5zZWxlY3QyKCk7XG4gICAgICBpZiAodGhpcy52YWx1ZSkge1xuICAgICAgICAkKCcjcmYtcGhvbmUtY29kZScpXG4gICAgICAgICAgLnNlbGVjdDIoKVxuICAgICAgICAgIC52YWwodGhpcy52YWx1ZS5jb2RlICsgJy0nICsgdGhpcy52YWx1ZS5hbHBoYTJDb2RlKVxuICAgICAgICAgIC50cmlnZ2VyKCdjaGFuZ2Uuc2VsZWN0MicpO1xuICAgICAgfVxuICAgICAgJCgnI3JmLXBob25lLWNvZGUnKS5jaGFuZ2UoZnVuY3Rpb24oKSB7XG4gICAgICAgIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpwcmVmZXItY29uc3RcbiAgICAgICAgY29uc3QgdmFsID0gJCh0aGlzKVxuICAgICAgICAgIC52YWwoKVxuICAgICAgICAgIC5zcGxpdCgnLScpO1xuICAgICAgICAkdGhpcy52YWx1ZSA9IHsgLi4uJHRoaXMudmFsdWUsIGNvZGU6IHZhbFswXSwgYWxwaGEyQ29kZTogdmFsWzFdIH07XG4gICAgICB9KTtcbiAgICB9LCAxMDAwKTtcbiAgfVxuXG4gIHNlbGVjdENvdW50cnkodmFsKSB7XG4gICAgdmFsID0gdmFsLnNwbGl0KCctJyk7XG4gICAgdGhpcy52YWx1ZSA9IHsgLi4udGhpcy52YWx1ZSwgY29kZTogdmFsWzBdLCBhbHBoYTJDb2RlOiB2YWxbMV0gfTtcbiAgfVxuXG4gIGVudGVyUGhvbmUodmFsKSB7XG4gICAgdGhpcy52YWx1ZSA9IHsgLi4udGhpcy52YWx1ZSwgdmFsdWU6IHZhbCB9O1xuICB9XG5cbiAgd3JpdGVWYWx1ZSh2YWx1ZTogYW55KSB7XG4gICAgaWYgKHZhbHVlICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIHRoaXMudmFsdWUgPSB2YWx1ZTtcbiAgICB9XG4gIH1cblxuICByZWdpc3Rlck9uQ2hhbmdlKGZuKSB7XG4gICAgdGhpcy5wcm9wYWdhdGVDaGFuZ2UgPSBmbjtcbiAgfVxuXG4gIHJlZ2lzdGVyT25Ub3VjaGVkKCkge31cbn1cbiJdfQ==